{"ast":null,"code":"export function searchNearby(google, map, request) {\n  var infoWindow = new google.maps.InfoWindow();\n  initAutocomplete(google, map, infoWindow);\n  return new Promise((resolve, reject) => {\n    const service = new google.maps.places.PlacesService(map);\n    service.nearbySearch(request, (results, status, pagination) => {\n      if (status === google.maps.places.PlacesServiceStatus.OK) {\n        for (var i = 0; i < 10; i++) {\n          createMarker(google, map, results[i]);\n        }\n\n        resolve(results, pagination);\n      } else {\n        reject(results, status);\n      }\n    });\n  });\n}\nexport function initAutocomplete(google, map) {\n  var infoWindow = new google.maps.InfoWindow();\n  const input = document.getElementById(\"pac-input\");\n  const searchBox = new google.maps.places.SearchBox(input);\n  map.controls[google.maps.ControlPosition.TOP_CENTER].push(input);\n  geoLocateUser(google, map, infoWindow); // Bias the SearchBox results towards current map's viewport.\n\n  map.addListener(\"bounds_changed\", () => {\n    searchBox.setBounds(map.getBounds());\n    google.maps.event.trigger(map, 'resize');\n  });\n  let markers = []; // Listen for the event fired when the user selects a prediction and retrieve\n  // more details for that place.\n\n  searchBox.addListener(\"places_changed\", () => {\n    const places = searchBox.getPlaces();\n\n    if (places.length === 0) {\n      return;\n    } // Clear out the old markers.\n\n\n    markers.forEach(marker => {\n      marker.setMap(null);\n    });\n    markers = []; // For each place, get the icon, name and location.\n\n    const bounds = new google.maps.LatLngBounds();\n\n    for (let i = 0; i < places.length; i++) {\n      var place = places[i];\n      console.log(place);\n\n      if (!place.geometry || !place.geometry.location) {\n        console.log(\"Returned place contains no geometry\");\n        return;\n      }\n\n      const icon = {\n        url: place.icon,\n        size: new google.maps.Size(71, 71),\n        origin: new google.maps.Point(0, 0),\n        anchor: new google.maps.Point(17, 34),\n        scaledSize: new google.maps.Size(25, 25)\n      }; // Create a marker for each place.\n\n      createMarker(google, map, place);\n\n      if (place.geometry.viewport) {\n        // Only geocodes have viewport.\n        bounds.union(place.geometry.viewport);\n      } else {\n        bounds.extend(place.geometry.location);\n      }\n    }\n\n    map.fitBounds(bounds);\n  });\n}\nexport function createMarkers(google, map, places) {\n  if (!places.length) {\n    return;\n  } else {\n    for (var i = 0; i < places.length; i++) {\n      createMarker(google, map, places[i]);\n    }\n  }\n}\nexport function createMarker(google, map, place) {\n  if (!place.geometry || !place.geometry.location) return;\n  const marker = new google.maps.Marker({\n    map,\n    position: place.geometry.location\n  });\n  google.maps.event.addListener(marker, \"click\", function () {\n    return function () {\n      marker.infoWindow = new google.maps.InfoWindow();\n      var mainType = place.types[0];\n      var name = place.name;\n      var address = place.formatted_address;\n      var phoneNumber = place.formatted_phone_number;\n      var html = \"<b>\" + name + \"</b> <br/> <b> address: \" + address + \"</b> <br/> <b>business: \" + mainType + \"</b> <br/> <b> phone #: \" + phoneNumber + \"</b> <br/> <b>\";\n      map.panTo(marker.getPosition());\n      marker.infoWindow.setContent(html);\n      marker.infoWindow.open(map, marker);\n    }(marker);\n  });\n}\nexport function geoLocateUser(google, map) {\n  var infoWindow = new google.maps.InfoWindow();\n  const locationButton = document.createElement(\"button\");\n  locationButton.textContent = \"Pan to Current Location\";\n  locationButton.classList.add(\"custom-map-control-button\");\n  map.controls[google.maps.ControlPosition.TOP_CENTER].push(locationButton);\n  locationButton.addEventListener(\"click\", () => {\n    // Try HTML5 geolocation.\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const pos = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n        infoWindow.setPosition(pos);\n        infoWindow.setContent(\"Your location\"); //infoWindow.open(map);\n\n        map.setCenter(pos);\n      }, () => {\n        handleLocationError(true, infoWindow, map.getCenter());\n      });\n    } else {\n      // Browser doesn't support Geolocation\n      handleLocationError(false, infoWindow, map.getCenter());\n    }\n  });\n\n  function handleLocationError(browserHasGeolocation, infoWindow, pos) {\n    infoWindow.setPosition(pos);\n    infoWindow.setContent(browserHasGeolocation ? \"Error: The Geolocation service failed.\" : \"Error: Your browser doesn't support geolocation.\");\n    infoWindow.open(map);\n  }\n}\n/*\n * getDetails\n * Get details from the Google API about one specific place.\n */\n\nexport function getDetails(google, map, placeId) {\n  return new Promise((resolve, reject) => {\n    const service = new google.maps.places.PlacesService(map);\n    const request = {\n      placeId\n    };\n    service.getDetails(request, (place, status) => {\n      if (status !== google.maps.places.PlacesServiceStatus.OK) {\n        return reject(status);\n      } else {\n        resolve(place);\n      }\n    });\n  });\n}","map":{"version":3,"sources":["/Users/bgee/Desktop/Web App Projects/mern-exercise-tracker/src/utils/googleApiHelpers.js"],"names":["searchNearby","google","map","request","infoWindow","maps","InfoWindow","initAutocomplete","Promise","resolve","reject","service","places","PlacesService","nearbySearch","results","status","pagination","PlacesServiceStatus","OK","i","createMarker","input","document","getElementById","searchBox","SearchBox","controls","ControlPosition","TOP_CENTER","push","geoLocateUser","addListener","setBounds","getBounds","event","trigger","markers","getPlaces","length","forEach","marker","setMap","bounds","LatLngBounds","place","console","log","geometry","location","icon","url","size","Size","origin","Point","anchor","scaledSize","viewport","union","extend","fitBounds","createMarkers","Marker","position","mainType","types","name","address","formatted_address","phoneNumber","formatted_phone_number","html","panTo","getPosition","setContent","open","locationButton","createElement","textContent","classList","add","addEventListener","navigator","geolocation","getCurrentPosition","pos","lat","coords","latitude","lng","longitude","setPosition","setCenter","handleLocationError","getCenter","browserHasGeolocation","getDetails","placeId"],"mappings":"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","sourcesContent":["export function searchNearby(google, map, request) {\n  var infoWindow = new google.maps.InfoWindow();\n  initAutocomplete(google, map, infoWindow)\n\n  return new Promise((resolve, reject) => {\n    const service = new google.maps.places.PlacesService(map);\n    service.nearbySearch(request, (results, status, pagination) => {\n      if (status === google.maps.places.PlacesServiceStatus.OK) {\n        for (var i = 0; i < 10; i++) {\n          createMarker(google, map, results[i]);\n        }\n        resolve(results, pagination);\n      } else {\n        reject(results, status);\n      }\n    })\n  });\n}\n\nexport function initAutocomplete(google, map) {\n  var infoWindow = new google.maps.InfoWindow();\n  const input = document.getElementById(\"pac-input\")\n  const searchBox = new google.maps.places.SearchBox(input);\n  map.controls[google.maps.ControlPosition.TOP_CENTER].push(input);\n\n  geoLocateUser(google, map, infoWindow)\n\n  // Bias the SearchBox results towards current map's viewport.\n  map.addListener(\"bounds_changed\", () => {\n    searchBox.setBounds(map.getBounds());\n    google.maps.event.trigger(map, 'resize')\n  });\n  let markers = [];\n  // Listen for the event fired when the user selects a prediction and retrieve\n  // more details for that place.\n  searchBox.addListener(\"places_changed\", () => {\n    const places = searchBox.getPlaces();\n\n    if (places.length === 0) {\n      return;\n    }\n    // Clear out the old markers.\n    markers.forEach((marker) => {\n      marker.setMap(null);\n    });\n    markers = [];\n    // For each place, get the icon, name and location.\n    const bounds = new google.maps.LatLngBounds();\n\n    for (let i = 0; i < places.length; i++) {\n      var place = places[i];\n      console.log(place)\n        if (!place.geometry || !place.geometry.location) {\n          console.log(\"Returned place contains no geometry\");\n          return;\n        }\n        const icon = {\n          url: place.icon,\n          size: new google.maps.Size(71, 71),\n          origin: new google.maps.Point(0, 0),\n          anchor: new google.maps.Point(17, 34),\n          scaledSize: new google.maps.Size(25, 25),\n        };\n        // Create a marker for each place.\n        createMarker(google, map, place);\n  \n        if (place.geometry.viewport) {\n          // Only geocodes have viewport.\n          bounds.union(place.geometry.viewport);\n        } else {\n          bounds.extend(place.geometry.location);\n        }\n    }\n    map.fitBounds(bounds);\n  });\n}\n\nexport function createMarkers(google, map, places) {\n  if (!places.length) {\n    return\n  } else {\n    for (var i = 0; i < places.length; i++) {\n      createMarker(google, map, places[i])\n    }\n  }\n}\n\nexport function createMarker(google, map, place) {\n  if (!place.geometry || !place.geometry.location) return;\n\n  const marker = new google.maps.Marker({\n    map,\n    position: place.geometry.location,\n  });\n\n  google.maps.event.addListener(marker, \"click\", (function() {\n    return function() {\n      marker.infoWindow = new google.maps.InfoWindow();\n      var mainType = place.types[0];\n      var name = place.name;\n      var address = place.formatted_address;\n      var phoneNumber = place.formatted_phone_number;\n      var html = \"<b>\" + name + \"</b> <br/> <b> address: \" + address + \"</b> <br/> <b>business: \" + mainType + \"</b> <br/> <b> phone #: \" + phoneNumber + \"</b> <br/> <b>\" ;\n      \n      map.panTo(marker.getPosition());\n      marker.infoWindow.setContent(html);\n      marker.infoWindow.open(map, marker);\n    }(marker);\n  }))\n}\n\nexport function geoLocateUser(google, map) {\n  var infoWindow = new google.maps.InfoWindow();\n\n  const locationButton = document.createElement(\"button\");\n  locationButton.textContent = \"Pan to Current Location\";\n  locationButton.classList.add(\"custom-map-control-button\");\n  map.controls[google.maps.ControlPosition.TOP_CENTER].push(locationButton);\n\n  locationButton.addEventListener(\"click\", () => {\n    // Try HTML5 geolocation.\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const pos = {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n          };\n          infoWindow.setPosition(pos);\n          infoWindow.setContent(\"Your location\");\n          //infoWindow.open(map);\n          map.setCenter(pos);\n        },\n        () => {\n          handleLocationError(true, infoWindow, map.getCenter());\n        }\n      );\n    } else {\n      // Browser doesn't support Geolocation\n      handleLocationError(false, infoWindow, map.getCenter());\n    }\n  });\n\n  function handleLocationError(browserHasGeolocation, infoWindow, pos) {\n    infoWindow.setPosition(pos);\n    infoWindow.setContent(\n      browserHasGeolocation\n        ? \"Error: The Geolocation service failed.\"\n        : \"Error: Your browser doesn't support geolocation.\"\n    );\n    infoWindow.open(map);\n  }\n}\n\n\n/*\n * getDetails\n * Get details from the Google API about one specific place.\n */\nexport function getDetails(google, map, placeId) {\n  return new Promise((resolve, reject) => {\n    const service = new google.maps.places.PlacesService(map);\n\n    const request = {\n      placeId\n    }\n\n    service.getDetails(request, (place, status) => {\n      if (status !== google.maps.places.PlacesServiceStatus.OK) {\n        return reject(status);\n      } else {\n        resolve(place);\n      }\n    })\n  })\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}