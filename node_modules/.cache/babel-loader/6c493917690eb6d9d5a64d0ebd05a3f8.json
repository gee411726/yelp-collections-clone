{"ast":null,"code":"export function searchNearby(google, map, request) {\n  return new Promise((resolve, reject) => {\n    const service = new google.maps.places.PlacesService(map);\n    var infowindow = new google.maps.InfoWindow();\n    service.nearbySearch(request, (results, status, pagination) => {\n      if (status == google.maps.places.PlacesServiceStatus.OK) {\n        for (var i = 0; i < results.length; i++) {//createMarker(results[i]);\n          //console.log(results[i])\n        }\n\n        resolve(results, pagination);\n      } else {\n        reject(results, status);\n      }\n    });\n\n    function createMarker(place) {\n      if (!place.geometry || !place.geometry.location) return;\n      const marker = new google.maps.Marker({\n        map,\n        position: place.geometry.location\n      });\n      google.maps.event.addListener(marker, \"click\", () => {\n        infowindow.setContent(place.name || \"\");\n        infowindow.open(map);\n      });\n    }\n  });\n}\n/*\n * getDetails\n *\n * Get details from the Google API about one specific place.\n */\n\nexport function getDetails(google, map, placeId) {\n  return new Promise((resolve, reject) => {\n    const service = new google.maps.places.PlacesService(map);\n    const request = {\n      placeId\n    };\n    service.getDetails(request, (place, status) => {\n      if (status !== google.maps.places.PlacesServiceStatus.OK) {\n        return reject(status);\n      } else {\n        resolve(place);\n      }\n    });\n  });\n}\nexport function searchQuery(google, map) {\n  const service = new google.maps.places.PlacesService(map);\n  var infowindow = new google.maps.InfoWindow();\n  const request = {\n    query: \"Museum of Contemporary Art\",\n    fields: [\"name\"]\n  };\n  service.findPlaceFromQuery(request, (results, status) => {\n    if (status === google.maps.places.PlacesServiceStatus.OK && results) {\n      for (let i = 0; i < results.length; i++) {\n        createMarker(results[i]);\n      }\n\n      map.setCenter(results[0].geometry.location);\n    }\n  });\n\n  function createMarker(place) {\n    var infowindow = new google.maps.InfoWindow();\n    if (!place.geometry || !place.geometry.location) return;\n    const marker = new google.maps.Marker({\n      map,\n      position: place.geometry.location\n    });\n    google.maps.event.addListener(marker, \"click\", () => {\n      infowindow.setContent(place.name || \"\");\n      infowindow.open(map);\n    });\n  }\n}\nexport function geoLocate(map) {\n  infoWindow = new google.maps.InfoWindow();\n  const locationButton = document.createElement(\"button\");\n  locationButton.textContent = \"Pan to Current Location\";\n  locationButton.classList.add(\"custom-map-control-button\");\n  map.controls[google.maps.ControlPosition.TOP_CENTER].push(locationButton);\n  locationButton.addEventListener(\"click\", () => {\n    // Try HTML5 geolocation.\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const pos = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n        infoWindow.setPosition(pos);\n        infoWindow.setContent(\"Location found.\");\n        infoWindow.open(map);\n        map.setCenter(pos);\n      }, () => {\n        handleLocationError(true, infoWindow, map.getCenter());\n      });\n    } else {\n      // Browser doesn't support Geolocation\n      handleLocationError(false, infoWindow, map.getCenter());\n    }\n  });\n}\n\nfunction handleLocationError(browserHasGeolocation, infoWindow, pos) {\n  infoWindow.setPosition(pos);\n  infoWindow.setContent(browserHasGeolocation ? \"Error: The Geolocation service failed.\" : \"Error: Your browser doesn't support geolocation.\");\n  infoWindow.open(map);\n}","map":{"version":3,"sources":["/Users/bgee/Desktop/Web App Projects/mern-exercise-tracker/src/utils/googleApiHelpers.js"],"names":["searchNearby","google","map","request","Promise","resolve","reject","service","maps","places","PlacesService","infowindow","InfoWindow","nearbySearch","results","status","pagination","PlacesServiceStatus","OK","i","length","createMarker","place","geometry","location","marker","Marker","position","event","addListener","setContent","name","open","getDetails","placeId","searchQuery","query","fields","findPlaceFromQuery","setCenter","geoLocate","infoWindow","locationButton","document","createElement","textContent","classList","add","controls","ControlPosition","TOP_CENTER","push","addEventListener","navigator","geolocation","getCurrentPosition","pos","lat","coords","latitude","lng","longitude","setPosition","handleLocationError","getCenter","browserHasGeolocation"],"mappings":"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","sourcesContent":["export function searchNearby(google, map, request) {\n  return new Promise((resolve, reject) => {\n    const service = new google.maps.places.PlacesService(map);\n    var infowindow = new google.maps.InfoWindow();\n\n    service.nearbySearch(request, (results, status, pagination) => {\n      if (status == google.maps.places.PlacesServiceStatus.OK) {\n        for (var i = 0; i < results.length; i++) {\n          //createMarker(results[i]);\n          //console.log(results[i])\n        }\n\n        resolve(results, pagination);\n      } else {\n        reject(results, status);\n      }\n    })\n\n    function createMarker(place) {\n      if (!place.geometry || !place.geometry.location) return;\n      const marker = new google.maps.Marker({\n        map,\n        position: place.geometry.location,\n      });\n      google.maps.event.addListener(marker, \"click\", () => {\n        infowindow.setContent(place.name || \"\");\n        infowindow.open(map);\n      });\n    }\n\n  });\n}\n/*\n * getDetails\n *\n * Get details from the Google API about one specific place.\n */\nexport function getDetails(google, map, placeId) {\n  return new Promise((resolve, reject) => {\n    const service = new google.maps.places.PlacesService(map);\n\n    const request = {\n      placeId\n    }\n\n    service.getDetails(request, (place, status) => {\n      if (status !== google.maps.places.PlacesServiceStatus.OK) {\n        return reject(status);\n      } else {\n        resolve(place);\n      }\n    })\n  })\n}\n\nexport function searchQuery(google, map) {\n  const service = new google.maps.places.PlacesService(map);\n  var infowindow = new google.maps.InfoWindow();\n\n  const request = {\n    query: \"Museum of Contemporary Art\",\n    fields: [\"name\"],\n  };\n\n  service.findPlaceFromQuery(request, (results, status) => {\n    if (status === google.maps.places.PlacesServiceStatus.OK && results) {\n      for (let i = 0; i < results.length; i++) {\n        createMarker(results[i]);\n      }\n      map.setCenter(results[0].geometry.location);\n    }\n  });\n\n  function createMarker(place) {\n    var infowindow = new google.maps.InfoWindow();\n    \n    if (!place.geometry || !place.geometry.location) return;\n    const marker = new google.maps.Marker({\n      map,\n      position: place.geometry.location,\n    });\n    google.maps.event.addListener(marker, \"click\", () => {\n      infowindow.setContent(place.name || \"\");\n      infowindow.open(map);\n    });\n  }\n}\n\nexport function geoLocate(map) {\n  infoWindow = new google.maps.InfoWindow();\n  const locationButton = document.createElement(\"button\");\n  locationButton.textContent = \"Pan to Current Location\";\n  locationButton.classList.add(\"custom-map-control-button\");\n  map.controls[google.maps.ControlPosition.TOP_CENTER].push(locationButton);\n  locationButton.addEventListener(\"click\", () => {\n    // Try HTML5 geolocation.\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const pos = {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n          };\n          infoWindow.setPosition(pos);\n          infoWindow.setContent(\"Location found.\");\n          infoWindow.open(map);\n          map.setCenter(pos);\n        },\n        () => {\n          handleLocationError(true, infoWindow, map.getCenter());\n        }\n      );\n    } else {\n      // Browser doesn't support Geolocation\n      handleLocationError(false, infoWindow, map.getCenter());\n    }\n  });\n}\n\nfunction handleLocationError(browserHasGeolocation, infoWindow, pos) {\n  infoWindow.setPosition(pos);\n  infoWindow.setContent(\n    browserHasGeolocation\n      ? \"Error: The Geolocation service failed.\"\n      : \"Error: Your browser doesn't support geolocation.\"\n  );\n  infoWindow.open(map);\n}"]},"metadata":{},"sourceType":"module"}