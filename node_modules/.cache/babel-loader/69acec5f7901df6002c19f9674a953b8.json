{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/bgee/Desktop/Web App Projects/mern-exercise-tracker/src/views/Map/Map.js\";\nimport React from 'react';\nimport { PropTypes as T } from 'prop-types';\nimport classnames from 'classnames';\nimport Map, { GoogleApiWrapper, Marker } from 'google-maps-react';\nimport styles from './styles.module.css';\nimport { searchNearby, searchQuery, geoLocateUser, initAutocomplete } from '../..googleApiHelpers';\nexport class MapComponent extends React.Component {\n  _renderMarkers() {\n    if (!this.props.places) {\n      return;\n    }\n\n    return this.props.places.map(p => {\n      return /*#__PURE__*/_jsxDEV(Marker, {\n        name: p.id,\n        place: p,\n        label: p.name,\n        onClick: this.props.onMarkerClick.bind(this),\n        map: this.props.map,\n        position: p.geometry.location\n      }, p.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 14\n      }, this);\n    });\n  }\n\n  _renderChildren() {\n    const {\n      children\n    } = this.props;\n\n    if (React.Children.count(children) > 0) {\n      return React.Children.map(children, c => {\n        return /*#__PURE__*/React.cloneElement(c, this.props, {\n          map: this.props.map,\n          google: this.props.google\n        });\n      });\n    } else {\n      return this._renderMarkers();\n    }\n  }\n\n  render() {\n    const {\n      children\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Map, {\n      map: this.props.map,\n      google: this.props.google,\n      className: styles.map //zoom={this.props.zoom}\n      ,\n      onRecenter: this.props.onMove,\n      onDragend: this.props.onMove,\n      onClick: this.props.onClick,\n      visible: !children || React.Children.count(children) == 0,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"pac-input\",\n        className: \"controls\",\n        type: \"text\",\n        placeholder: \"Search Box\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), this._renderChildren()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nMapComponent.propTypes = {\n  onMarkerClick: T.func\n};\n\nconst identity = (...a) => a;\n\nMapComponent.defaultProps = {\n  onMarkerClick: identity\n};\nconst GAPI_KEY = process.env.REACT_APP_GAPI_KEY;\nexport default GoogleApiWrapper({\n  apiKey: GAPI_KEY\n})(MapComponent);","map":{"version":3,"sources":["/Users/bgee/Desktop/Web App Projects/mern-exercise-tracker/src/views/Map/Map.js"],"names":["React","PropTypes","T","classnames","Map","GoogleApiWrapper","Marker","styles","searchNearby","searchQuery","geoLocateUser","initAutocomplete","MapComponent","Component","_renderMarkers","props","places","map","p","id","name","onMarkerClick","bind","geometry","location","_renderChildren","children","Children","count","c","cloneElement","google","render","onMove","onClick","propTypes","func","identity","a","defaultProps","GAPI_KEY","process","env","REACT_APP_GAPI_KEY","apiKey"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { PropTypes as T } from 'prop-types';\nimport classnames from 'classnames';\nimport Map, {GoogleApiWrapper, Marker} from 'google-maps-react';\nimport styles from './styles.module.css';\nimport {searchNearby, searchQuery, geoLocateUser, initAutocomplete} from '../..googleApiHelpers';\n\n\nexport class MapComponent extends React.Component {\n  _renderMarkers() {\n    if (!this.props.places) {\n      return;\n    }\n    return this.props.places.map(p => {\n      return <Marker\n                key={p.id}\n                name={p.id} \n                place={p}\n                label={p.name}\n                onClick={this.props.onMarkerClick.bind(this)}\n                map={this.props.map}\n                position={p.geometry.location} />\n    });\n  }\n\n  _renderChildren() {\n    const {children} = this.props;\n\n    if (React.Children.count(children) > 0) {\n      return React.Children.map(children, c => {\n        return React.cloneElement(c, this.props, {\n          map: this.props.map,\n          google: this.props.google\n        })\n      })\n    } else {\n      return this._renderMarkers();\n    }\n  }\n\n  render() {\n    const {children} = this.props;\n\n    return (\n      <Map map={this.props.map}\n        google={this.props.google}\n        className={styles.map}\n        //zoom={this.props.zoom}\n        onRecenter={this.props.onMove}\n        onDragend={this.props.onMove}\n        onClick={this.props.onClick}\n        visible={!children || React.Children.count(children) == 0}\n        >\n        {\n          <input\n            id=\"pac-input\"\n            className=\"controls\"\n            type=\"text\"\n            placeholder=\"Search Box\"\n          />\n        }\n        {this._renderChildren()}\n      </Map>\n    )\n  }\n}\n\nMapComponent.propTypes = {\n  onMarkerClick: T.func\n}\nconst identity = (...a) => a;\nMapComponent.defaultProps = {\n  onMarkerClick: identity\n}\n\nconst GAPI_KEY = process.env.REACT_APP_GAPI_KEY;\nexport default GoogleApiWrapper({\n  apiKey: GAPI_KEY\n})(MapComponent)"]},"metadata":{},"sourceType":"module"}