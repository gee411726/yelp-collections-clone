{"ast":null,"code":"import _classCallCheck from\"/Users/bgee/Desktop/Web App Projects/yelp-collections-clone-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/bgee/Desktop/Web App Projects/yelp-collections-clone-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/bgee/Desktop/Web App Projects/yelp-collections-clone-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/bgee/Desktop/Web App Projects/yelp-collections-clone-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/bgee/Desktop/Web App Projects/yelp-collections-clone-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React from'react';import Map,{GoogleApiWrapper}from'google-maps-react';import MapComponent from'../Map/Map';import Sidebar from'../../components/Sidebar/Sidebar';import styles from'./styles.module.css';var mapStyles={width:'100%',height:'100%'};export var MapsViewContainer=/*#__PURE__*/function(_React$Component){_inherits(MapsViewContainer,_React$Component);var _super=_createSuper(MapsViewContainer);function MapsViewContainer(props,context){var _this;_classCallCheck(this,MapsViewContainer);_this=_super.call(this,props,context);_this.setCurrentPlaces=_this.setCurrentPlaces.bind(_assertThisInitialized(_this));_this.onClickPlace=_this.onClickPlace.bind(_assertThisInitialized(_this));_this.removeDetailItem=_this.removeDetailItem.bind(_assertThisInitialized(_this));_this.sendCurrentCollectionToMapView=_this.sendCurrentCollectionToMapView.bind(_assertThisInitialized(_this));_this.setDBPlace=_this.setDBPlace.bind(_assertThisInitialized(_this));_this.state={currentPlacesFromCollection:[],detailItem:{},currentCollectionName:'',DBPlace:{}};return _this;}_createClass(MapsViewContainer,[{key:\"setCurrentPlaces\",value:function setCurrentPlaces(currentPlacesFromCollection){this.setState({currentPlacesFromCollection:currentPlacesFromCollection});}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps,prevState){if(this.state.currentPlacesFromCollection!==prevState.currentPlacesFromCollection){this.setState({currentPlacesFromCollection:this.state.currentPlacesFromCollection});}}},{key:\"onClickPlace\",value:function onClickPlace(item){this.setState({detailItem:item});//sends place object to Collection / Detail\n}},{key:\"removeDetailItem\",value:function removeDetailItem(){this.setState({detailItem:{}});}},{key:\"sendCurrentCollectionToMapView\",value:function sendCurrentCollectionToMapView(currentCollection){this.setState({currentCollectionName:currentCollection});}},{key:\"setDBPlace\",value:function setDBPlace(DBPlace){this.setState({DBPlace:DBPlace});}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(Map,{google:this.props.google,visible:false,className:styles.wrapper,style:mapStyles,children:[/*#__PURE__*/_jsx(Sidebar,{title:'Collections List',collections:this.props.collections,className:\"Sidebar\",setCurrentPlaces:this.setCurrentPlaces,onClickPlace:this.onClickPlace,removeDetailItem:this.removeDetailItem,sendCurrentCollectionToMapView:this.sendCurrentCollectionToMapView,setDBPlace:this.setDBPlace}),/*#__PURE__*/_jsx(MapComponent,{currentPlacesFromCollection:this.state.currentPlacesFromCollection,detailItem:this.state.detailItem,location:this.props.location,currentCollectionName:this.state.currentCollectionName,collections:this.props.collections,DBPlace:this.state.DBPlace})]});}}]);return MapsViewContainer;}(React.Component);var GAPI_KEY=process.env.REACT_APP_GAPI_KEY;export default GoogleApiWrapper({apiKey:GAPI_KEY})(MapsViewContainer);","map":{"version":3,"sources":["/Users/bgee/Desktop/Web App Projects/yelp-collections-clone-project/src/views/Maps-View-Container/maps-view-container.js"],"names":["React","Map","GoogleApiWrapper","MapComponent","Sidebar","styles","mapStyles","width","height","MapsViewContainer","props","context","setCurrentPlaces","bind","onClickPlace","removeDetailItem","sendCurrentCollectionToMapView","setDBPlace","state","currentPlacesFromCollection","detailItem","currentCollectionName","DBPlace","setState","prevProps","prevState","item","currentCollection","google","wrapper","collections","location","Component","GAPI_KEY","process","env","REACT_APP_GAPI_KEY","apiKey"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Map, {GoogleApiWrapper} from 'google-maps-react'\nimport MapComponent from '../Map/Map';\n\nimport Sidebar from '../../components/Sidebar/Sidebar'\nimport styles from './styles.module.css'\n\n\nconst mapStyles = {\n  width: '100%',\n  height: '100%'\n};\n\n\nexport class MapsViewContainer extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.setCurrentPlaces = this.setCurrentPlaces.bind(this);\n    this.onClickPlace = this.onClickPlace.bind(this);\n    this.removeDetailItem = this.removeDetailItem.bind(this);\n    this.sendCurrentCollectionToMapView = this.sendCurrentCollectionToMapView.bind(this);\n    this.setDBPlace = this.setDBPlace.bind(this);\n\n    this.state = {\n      currentPlacesFromCollection: [],\n      detailItem: {},\n      currentCollectionName: '',\n      DBPlace: {}\n    }\n  }\n\n  setCurrentPlaces (currentPlacesFromCollection) {\n    this.setState({\n      currentPlacesFromCollection: currentPlacesFromCollection\n    })\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.currentPlacesFromCollection !== prevState.currentPlacesFromCollection ) {\n      this.setState( { currentPlacesFromCollection:  this.state.currentPlacesFromCollection} )\n    }\n  }\n\n  onClickPlace(item) { \n    this.setState({ detailItem: item }) //sends place object to Collection / Detail\n  }\n\n  removeDetailItem() {\n    this.setState({ detailItem: {} })\n  }\n\n  sendCurrentCollectionToMapView(currentCollection) {\n    this.setState({ currentCollectionName: currentCollection })\n  }\n\n  setDBPlace(DBPlace) {\n    this.setState({ DBPlace: DBPlace })\n  }\n\n  render() {\n\n    return (\n        <Map\n          google={this.props.google}\n          visible={false}\n          className={styles.wrapper}\n          style={mapStyles}\n          >\n          <Sidebar\n            title={'Collections List'}\n            collections={this.props.collections}\n            className=\"Sidebar\"\n            setCurrentPlaces={this.setCurrentPlaces}\n            onClickPlace={this.onClickPlace}\n            removeDetailItem={this.removeDetailItem}\n            sendCurrentCollectionToMapView={this.sendCurrentCollectionToMapView}\n            setDBPlace={this.setDBPlace}\n          >      \n          </Sidebar>\n          <MapComponent \n            currentPlacesFromCollection={this.state.currentPlacesFromCollection}\n            detailItem={this.state.detailItem}\n            location={this.props.location}\n            currentCollectionName={this.state.currentCollectionName}\n            collections={this.props.collections}\n            DBPlace={this.state.DBPlace}>\n            </MapComponent>\n        </Map>\n    )\n  }\n}\n\n\nconst GAPI_KEY = process.env.REACT_APP_GAPI_KEY;\nexport default GoogleApiWrapper({\n  apiKey: GAPI_KEY\n})(MapsViewContainer)"]},"metadata":{},"sourceType":"module"}