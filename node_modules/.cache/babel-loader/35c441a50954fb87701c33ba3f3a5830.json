{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/bgee/Desktop/Web App Projects/mern-exercise-tracker/src/views/maps-edit-container.js\";\nimport React from 'react';\nimport { PropTypes as T } from 'prop-types';\nimport Map, { GoogleApiWrapper } from 'google-maps-react';\nimport { searchNearby, searchQuery, geoLocateUser, initAutocomplete } from '../utils/googleApiHelpers';\nimport './maps-searchbar.css'; //import Header from '../components/Header/Header'\n\nimport Sidebar from '../components/Sidebar/Sidebar';\nimport styles from './styles.module.css';\nconst mapStyles = {\n  width: '50%',\n  height: '50%'\n};\nexport class MapContainer extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      places: [],\n      pagination: null\n    };\n  }\n\n  onReady(mapProps, map) {\n    initAutocomplete(this.props.google, map);\n    searchNearby(this.props.google, map, {\n      location: map.center,\n      radius: '1000',\n      types: ['bank']\n    }).then((results, pagination) => {\n      this.setState({\n        places: results,\n        pagination\n      });\n    }).catch(status => {\n      console.log('error fetching nearby', status);\n    });\n  }\n\n  onMapMove() {}\n\n  onMarkerClick(item) {\n    // history stuff\n    //const {push} = this.context.router;\n    const {\n      place\n    } = item; //push(`/map/detail/${place.place_id}`)\n  }\n\n  render() {\n    let children = null;\n\n    if (this.props.children) {\n      children = /*#__PURE__*/React.cloneElement(this.props.children, {\n        google: this.props.google,\n        places: this.state.places,\n        loaded: this.props.loaded,\n        router: this.context.router,\n        onMove: this.onMapMove.bind(this),\n        onMarkerClick: this.onMarkerClick.bind(this),\n        zoom: this.props.zoom\n      });\n    }\n\n    return /*#__PURE__*/_jsxDEV(Map, {\n      google: this.props.google,\n      onReady: this.onReady.bind(this),\n      visible: true,\n      className: styles.wrapper,\n      style: mapStyles,\n      initialCenter: {\n        lat: 40.7831,\n        lng: -73.9712\n      },\n      scaleControl: true,\n      zoomControl: true,\n      zoomControlOptions: {\n        position: this.props.google.maps.ControlPosition.LEFT_CENTER\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"pac-input\",\n        className: \"controls\",\n        type: \"text\",\n        placeholder: \"Search Box\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Sidebar, {\n        title: 'SIDEBAR TITLE',\n        onListItemClick: this.onMarkerClick.bind(this),\n        places: this.state.places\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.content,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this);\n  }\n\n}\nMapContainer.contextTypes = {\n  router: T.object\n};\nconst GAPI_KEY = process.env.REACT_APP_GAPI_KEY;\nexport default GoogleApiWrapper({\n  apiKey: GAPI_KEY\n})(MapContainer);","map":{"version":3,"sources":["/Users/bgee/Desktop/Web App Projects/mern-exercise-tracker/src/views/maps-edit-container.js"],"names":["React","PropTypes","T","Map","GoogleApiWrapper","searchNearby","searchQuery","geoLocateUser","initAutocomplete","Sidebar","styles","mapStyles","width","height","MapContainer","Component","constructor","props","context","state","places","pagination","onReady","mapProps","map","google","location","center","radius","types","then","results","setState","catch","status","console","log","onMapMove","onMarkerClick","item","place","render","children","cloneElement","loaded","router","onMove","bind","zoom","wrapper","lat","lng","position","maps","ControlPosition","LEFT_CENTER","content","contextTypes","object","GAPI_KEY","process","env","REACT_APP_GAPI_KEY","apiKey"],"mappings":"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","sourcesContent":["\nimport React from 'react'\nimport { PropTypes as T } from 'prop-types'\nimport Map, {GoogleApiWrapper} from 'google-maps-react'\nimport {searchNearby, searchQuery, geoLocateUser, initAutocomplete} from '../utils/googleApiHelpers'\nimport './maps-searchbar.css'\n\n\n//import Header from '../components/Header/Header'\nimport Sidebar from '../components/Sidebar/Sidebar'\nimport styles from './styles.module.css'\n\nconst mapStyles = {\n  width: '50%',\n  height: '50%'\n};\n\nexport class MapContainer extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      places: [],\n      pagination: null\n    }\n  }\n\n  onReady(mapProps, map) {\n    initAutocomplete(this.props.google, map)\n    searchNearby(\n      this.props.google,\n      map,\n      {\n        location: map.center,\n        radius: '1000',\n        types: ['bank']\n      }\n    ).then((results, pagination) => {\n      this.setState({\n        places: results,\n        pagination\n      })\n    }).catch((status) => {\n      console.log('error fetching nearby', status)\n    })\n  }\n\n  onMapMove() {}\n\n  onMarkerClick(item) { // history stuff\n    //const {push} = this.context.router;\n    const {place} = item;\n    //push(`/map/detail/${place.place_id}`)\n  }\n\n  render() {\n    let children = null;\n    if (this.props.children) {\n      children = React.cloneElement(this.props.children, {\n        google: this.props.google,\n        places: this.state.places,\n        loaded: this.props.loaded,\n        router: this.context.router,\n        onMove: this.onMapMove.bind(this),\n        onMarkerClick: this.onMarkerClick.bind(this),\n        zoom: this.props.zoom\n      })\n    }\n\n    return (\n        <Map\n          google={this.props.google}\n          onReady={this.onReady.bind(this)}\n          visible={true}\n          className={styles.wrapper}\n          style={mapStyles}\n          initialCenter = {{ lat: 40.7831, lng: -73.9712 }}\n          scaleControl={true}\n          zoomControl={true}\n          zoomControlOptions={{position: this.props.google.maps.ControlPosition.LEFT_CENTER}}\n          >\n          <input\n            id=\"pac-input\"\n            className=\"controls\"\n            type=\"text\"\n            placeholder=\"Search Box\"\n          />\n\n          <Sidebar\n              title={'SIDEBAR TITLE'}\n              onListItemClick={this.onMarkerClick.bind(this)}\n              places={this.state.places} />\n\n          <div className={styles.content}>\n            {children}\n          </div>\n\n        </Map>\n    )\n  }\n}\n\nMapContainer.contextTypes = {\n  router: T.object\n}\n\nconst GAPI_KEY = process.env.REACT_APP_GAPI_KEY;\nexport default GoogleApiWrapper({\n  apiKey: GAPI_KEY\n})(MapContainer)"]},"metadata":{},"sourceType":"module"}