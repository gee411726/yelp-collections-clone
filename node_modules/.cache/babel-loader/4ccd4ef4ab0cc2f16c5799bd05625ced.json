{"ast":null,"code":"export function searchNearby(google, map, request) {\n  return new Promise((resolve, reject) => {\n    const service = new google.maps.places.PlacesService(map);\n    service.nearbySearch(request, (results, status, pagination) => {\n      if (status == google.maps.places.PlacesServiceStatus.OK) {\n        for (var i = 0; i < results.length; i++) {\n          createMarker(results[i]);\n        }\n\n        resolve(results, pagination);\n      } else {\n        reject(results, status);\n      }\n    });\n  });\n}\n/*\n * getDetails\n *\n * Get details from the Google API about one specific place.\n */\n\nexport function getDetails(google, map, placeId) {\n  return new Promise((resolve, reject) => {\n    const service = new google.maps.places.PlacesService(map);\n    const request = {\n      placeId\n    };\n    service.getDetails(request, (place, status) => {\n      if (status !== google.maps.places.PlacesServiceStatus.OK) {\n        return reject(status);\n      } else {\n        resolve(place);\n      }\n    });\n  });\n}","map":{"version":3,"sources":["/Users/bgee/Desktop/Web App Projects/mern-exercise-tracker/src/utils/googleApiHelpers.js"],"names":["searchNearby","google","map","request","Promise","resolve","reject","service","maps","places","PlacesService","nearbySearch","results","status","pagination","PlacesServiceStatus","OK","i","length","createMarker","getDetails","placeId","place"],"mappings":"AAAA,OAAO,SAASA,YAAT,CAAsBC,MAAtB,EAA8BC,GAA9B,EAAmCC,OAAnC,EAA4C;AACjD,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,UAAMC,OAAO,GAAG,IAAIN,MAAM,CAACO,IAAP,CAAYC,MAAZ,CAAmBC,aAAvB,CAAqCR,GAArC,CAAhB;AAEAK,IAAAA,OAAO,CAACI,YAAR,CAAqBR,OAArB,EAA8B,CAACS,OAAD,EAAUC,MAAV,EAAkBC,UAAlB,KAAiC;AAC7D,UAAID,MAAM,IAAIZ,MAAM,CAACO,IAAP,CAAYC,MAAZ,CAAmBM,mBAAnB,CAAuCC,EAArD,EAAyD;AACvD,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,OAAO,CAACM,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvCE,UAAAA,YAAY,CAACP,OAAO,CAACK,CAAD,CAAR,CAAZ;AACD;;AAEDZ,QAAAA,OAAO,CAACO,OAAD,EAAUE,UAAV,CAAP;AACD,OAND,MAMO;AACLR,QAAAA,MAAM,CAACM,OAAD,EAAUC,MAAV,CAAN;AACD;AACF,KAVD;AAWD,GAdM,CAAP;AAeD;AACD;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASO,UAAT,CAAoBnB,MAApB,EAA4BC,GAA5B,EAAiCmB,OAAjC,EAA0C;AAC/C,SAAO,IAAIjB,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,UAAMC,OAAO,GAAG,IAAIN,MAAM,CAACO,IAAP,CAAYC,MAAZ,CAAmBC,aAAvB,CAAqCR,GAArC,CAAhB;AAEA,UAAMC,OAAO,GAAG;AACdkB,MAAAA;AADc,KAAhB;AAIAd,IAAAA,OAAO,CAACa,UAAR,CAAmBjB,OAAnB,EAA4B,CAACmB,KAAD,EAAQT,MAAR,KAAmB;AAC7C,UAAIA,MAAM,KAAKZ,MAAM,CAACO,IAAP,CAAYC,MAAZ,CAAmBM,mBAAnB,CAAuCC,EAAtD,EAA0D;AACxD,eAAOV,MAAM,CAACO,MAAD,CAAb;AACD,OAFD,MAEO;AACLR,QAAAA,OAAO,CAACiB,KAAD,CAAP;AACD;AACF,KAND;AAOD,GAdM,CAAP;AAeD","sourcesContent":["export function searchNearby(google, map, request) {\n  return new Promise((resolve, reject) => {\n    const service = new google.maps.places.PlacesService(map);\n\n    service.nearbySearch(request, (results, status, pagination) => {\n      if (status == google.maps.places.PlacesServiceStatus.OK) {\n        for (var i = 0; i < results.length; i++) {\n          createMarker(results[i]);\n        }\n        \n        resolve(results, pagination);\n      } else {\n        reject(results, status);\n      }\n    })\n  });\n}\n/*\n * getDetails\n *\n * Get details from the Google API about one specific place.\n */\nexport function getDetails(google, map, placeId) {\n  return new Promise((resolve, reject) => {\n    const service = new google.maps.places.PlacesService(map);\n\n    const request = {\n      placeId\n    }\n\n    service.getDetails(request, (place, status) => {\n      if (status !== google.maps.places.PlacesServiceStatus.OK) {\n        return reject(status);\n      } else {\n        resolve(place);\n      }\n    })\n  })\n}"]},"metadata":{},"sourceType":"module"}