{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/bgee/Desktop/Web App Projects/mern-exercise-tracker/src/views/maps-view-container.js\";\nimport React from 'react';\nimport { PropTypes as T } from 'prop-types';\nimport Map, { GoogleApiWrapper } from 'google-maps-react';\nimport MapComponent from './Map/Map';\nimport Sidebar from '../components/Sidebar/Sidebar';\nimport styles from './styles.module.css';\nconst mapStyles = {\n  width: '100%',\n  height: '100%'\n};\nexport class MapsViewContainer extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.setCurrentPlaces = this.setCurrentPlaces.bind(this);\n    this.onPlaceClick = this.onPlaceClick.bind(this);\n    this.state = {\n      currentPlacesFromCollection: [],\n      pagination: null\n    };\n  }\n\n  setCurrentPlaces(currentPlacesFromCollection) {\n    this.setState({\n      currentPlacesFromCollection: currentPlacesFromCollection\n    });\n  }\n\n  onMapMove() {\n    return;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.currentPlacesFromCollection !== prevState.currentPlacesFromCollection) {\n      this.setState({\n        currentPlacesFromCollection: this.state.currentPlacesFromCollection\n      });\n    }\n  }\n\n  onClickPlace(item) {\n    const {\n      push\n    } = this.context.router.history.push;\n    const {\n      place\n    } = item;\n    push(`/map/detail/${place.place_id}`);\n  }\n\n  render() {\n    let children = null;\n\n    if (this.props.children) {\n      children = /*#__PURE__*/React.cloneElement(this.props.children, {\n        google: this.props.google,\n        loaded: this.props.loaded,\n        router: this.context.router,\n        onMove: this.onMapMove.bind(this),\n        onPlaceClick: this.onMarkerClick.bind(this),\n        zoom: this.props.zoom\n      });\n    }\n\n    return /*#__PURE__*/_jsxDEV(Map, {\n      google: this.props.google,\n      visible: false,\n      className: styles.wrapper,\n      style: mapStyles,\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        title: 'Collections List',\n        collections: this.props.collections,\n        className: \"Sidebar\",\n        setCurrentPlaces: this.setCurrentPlaces,\n        onClickPlace: this.onClickPlace,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.content,\n          children: this.props.children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MapComponent, {\n        currentPlacesFromCollection: this.state.currentPlacesFromCollection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this);\n  }\n\n}\nMapsViewContainer.contextTypes = {\n  router: T.object\n};\nconst GAPI_KEY = process.env.REACT_APP_GAPI_KEY;\nexport default GoogleApiWrapper({\n  apiKey: GAPI_KEY\n})(MapsViewContainer);","map":{"version":3,"sources":["/Users/bgee/Desktop/Web App Projects/mern-exercise-tracker/src/views/maps-view-container.js"],"names":["React","PropTypes","T","Map","GoogleApiWrapper","MapComponent","Sidebar","styles","mapStyles","width","height","MapsViewContainer","Component","constructor","props","context","setCurrentPlaces","bind","onPlaceClick","state","currentPlacesFromCollection","pagination","setState","onMapMove","componentDidUpdate","prevProps","prevState","onClickPlace","item","push","router","history","place","place_id","render","children","cloneElement","google","loaded","onMove","onMarkerClick","zoom","wrapper","collections","content","contextTypes","object","GAPI_KEY","process","env","REACT_APP_GAPI_KEY","apiKey"],"mappings":"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","sourcesContent":["\nimport React from 'react'\nimport { PropTypes as T } from 'prop-types'\nimport Map, {GoogleApiWrapper} from 'google-maps-react'\nimport MapComponent from './Map/Map';\n\nimport Sidebar from '../components/Sidebar/Sidebar'\nimport styles from './styles.module.css'\n\nconst mapStyles = {\n  width: '100%',\n  height: '100%'\n};\n\n\n\nexport class MapsViewContainer extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.setCurrentPlaces = this.setCurrentPlaces.bind(this);\n    this.onPlaceClick = this.onPlaceClick.bind(this);\n\n    this.state = {\n      currentPlacesFromCollection: [],\n      pagination: null\n    }\n  }\n\n  setCurrentPlaces (currentPlacesFromCollection) {\n    this.setState({\n      currentPlacesFromCollection: currentPlacesFromCollection\n    })\n  }\n\n  onMapMove() {\n    return\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.currentPlacesFromCollection !== prevState.currentPlacesFromCollection ) {\n      this.setState( { currentPlacesFromCollection:  this.state.currentPlacesFromCollection} )\n    }\n  }\n\n  onClickPlace(item) { \n    const { push } = this.context.router.history.push;\n    const { place } = item;\n    push(`/map/detail/${place.place_id}`)\n  }\n\n  render() {\n    let children = null;\n    if (this.props.children) {\n      children = React.cloneElement(this.props.children, {\n        google: this.props.google,\n        loaded: this.props.loaded,\n        router: this.context.router,\n        onMove: this.onMapMove.bind(this),\n        onPlaceClick: this.onMarkerClick.bind(this),\n        zoom: this.props.zoom\n      })\n    }\n\n    return (\n        <Map\n          google={this.props.google}\n          visible={false}\n          className={styles.wrapper}\n          style={mapStyles}\n          >\n          <Sidebar\n            title={'Collections List'}\n            collections={this.props.collections}\n            className=\"Sidebar\"\n            setCurrentPlaces={this.setCurrentPlaces}\n            onClickPlace={this.onClickPlace}\n          >      \n            <div className={styles.content}>\n              {this.props.children}\n            </div>    \n          </Sidebar>\n          <MapComponent currentPlacesFromCollection={this.state.currentPlacesFromCollection}/>\n        </Map>\n    )\n  }\n}\n\nMapsViewContainer.contextTypes = {\n  router: T.object\n}\n\nconst GAPI_KEY = process.env.REACT_APP_GAPI_KEY;\nexport default GoogleApiWrapper({\n  apiKey: GAPI_KEY\n})(MapsViewContainer)"]},"metadata":{},"sourceType":"module"}