{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/bgee/Desktop/Web App Projects/mern-exercise-tracker/src/views/maps-view-container.js\";\nimport React from 'react';\nimport { PropTypes as T } from 'prop-types';\nimport Map, { GoogleApiWrapper } from 'google-maps-react';\nimport { searchNearby, initAutocomplete } from '../utils/googleApiHelpers';\nimport MapComponent from './Map/Map'; //import Header from '../components/Header/Header'\n\nimport Sidebar from '../components/Sidebar/Sidebar';\nimport styles from './styles.module.css'; //import './maps-edit-container.css'\n\nconst mapStyles = {\n  width: '100%',\n  height: '100%'\n};\nexport class MapsViewContainer extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.setCurrentPlaces = this.setCurrentPlaces.bind(this);\n    this.state = {\n      pagination: null,\n      currentPlaces: []\n    };\n  }\n\n  setCurrentPlaces(currentPlacesFromCollection) {\n    this.setState({\n      currentPlaces: currentPlacesFromCollection\n    });\n    console.log(\"Current Places: \", this.state.currentPlaces);\n  }\n\n  onMapMove() {\n    return;\n  }\n\n  onMarkerClick(item) {\n    // history stuff\n    //const {push} = this.context.router;\n    const {\n      place\n    } = item; //push(`/map/detail/${place.place_id}`)\n  }\n\n  render() {\n    let children = null;\n\n    if (this.props.children) {\n      children = /*#__PURE__*/React.cloneElement(this.props.children, {\n        google: this.props.google,\n        loaded: this.props.loaded,\n        router: this.context.router,\n        onMove: this.onMapMove.bind(this),\n        onMarkerClick: this.onMarkerClick.bind(this),\n        zoom: this.props.zoom\n      });\n    }\n\n    return /*#__PURE__*/_jsxDEV(Map, {\n      google: this.props.google,\n      visible: false,\n      className: styles.wrapper,\n      style: mapStyles,\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        title: 'Collections List',\n        collections: this.props.collections,\n        className: \"Sidebar\",\n        setCurrentPlaces: this.setCurrentPlaces,\n        onClick: this.onMarkerClick,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.content,\n          children: this.props.children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MapComponent, {\n        currentPlaces: this.state.currentPlaces\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this);\n  }\n\n}\nMapsViewContainer.contextTypes = {\n  router: T.object\n};\nconst GAPI_KEY = process.env.REACT_APP_GAPI_KEY;\nexport default GoogleApiWrapper({\n  apiKey: GAPI_KEY\n})(MapsViewContainer);","map":{"version":3,"sources":["/Users/bgee/Desktop/Web App Projects/mern-exercise-tracker/src/views/maps-view-container.js"],"names":["React","PropTypes","T","Map","GoogleApiWrapper","searchNearby","initAutocomplete","MapComponent","Sidebar","styles","mapStyles","width","height","MapsViewContainer","Component","constructor","props","context","setCurrentPlaces","bind","state","pagination","currentPlaces","currentPlacesFromCollection","setState","console","log","onMapMove","onMarkerClick","item","place","render","children","cloneElement","google","loaded","router","onMove","zoom","wrapper","collections","content","contextTypes","object","GAPI_KEY","process","env","REACT_APP_GAPI_KEY","apiKey"],"mappings":"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","sourcesContent":["\nimport React from 'react'\nimport { PropTypes as T } from 'prop-types'\nimport Map, {GoogleApiWrapper} from 'google-maps-react'\nimport {searchNearby, initAutocomplete} from '../utils/googleApiHelpers'\nimport MapComponent from './Map/Map';\n\n\n//import Header from '../components/Header/Header'\nimport Sidebar from '../components/Sidebar/Sidebar'\nimport styles from './styles.module.css'\n//import './maps-edit-container.css'\n\nconst mapStyles = {\n  width: '100%',\n  height: '100%'\n};\n\nexport class MapsViewContainer extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.setCurrentPlaces = this.setCurrentPlaces.bind(this);\n\n    this.state = {\n      pagination: null,\n      currentPlaces: []\n    }\n  }\n\n  setCurrentPlaces (currentPlacesFromCollection) {\n    this.setState({\n      currentPlaces: currentPlacesFromCollection\n    })\n    console.log(\"Current Places: \", this.state.currentPlaces)\n  }\n\n  onMapMove() {\n    return\n  }\n\n  onMarkerClick(item) { // history stuff\n    //const {push} = this.context.router;\n    const { place } = item;\n    //push(`/map/detail/${place.place_id}`)\n  }\n\n  render() {\n    let children = null;\n    if (this.props.children) {\n      children = React.cloneElement(this.props.children, {\n        google: this.props.google,\n        loaded: this.props.loaded,\n        router: this.context.router,\n        onMove: this.onMapMove.bind(this),\n        onMarkerClick: this.onMarkerClick.bind(this),\n        zoom: this.props.zoom\n      })\n    }\n\n    return (\n        <Map\n          google={this.props.google}\n          visible={false}\n          className={styles.wrapper}\n          style={mapStyles}\n          >\n          <Sidebar\n            title={'Collections List'}\n            collections={this.props.collections}\n            className=\"Sidebar\"\n            setCurrentPlaces={this.setCurrentPlaces}\n            onClick={this.onMarkerClick}\n          >      \n            <div className={styles.content}>\n              {this.props.children}\n            </div>    \n          </Sidebar>\n          <MapComponent currentPlaces={this.state.currentPlaces}/>\n        </Map>\n    )\n  }\n}\n\nMapsViewContainer.contextTypes = {\n  router: T.object\n}\n\nconst GAPI_KEY = process.env.REACT_APP_GAPI_KEY;\nexport default GoogleApiWrapper({\n  apiKey: GAPI_KEY\n})(MapsViewContainer)"]},"metadata":{},"sourceType":"module"}