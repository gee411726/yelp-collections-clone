{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/bgee/Desktop/Web App Projects/yelp-collections-clone-project/src/views/maps-view-container.js\";\nimport React from 'react';\nimport Map, { GoogleApiWrapper } from 'google-maps-react';\nimport MapComponent from './Map/Map';\nimport Sidebar from '../components/Sidebar/Sidebar';\nimport styles from './styles.module.css';\nimport Detail from '../views/Detail/Detail';\nimport { Route } from 'react-router-dom';\nconst mapStyles = {\n  width: '100%',\n  height: '100%'\n};\nexport class MapsViewContainer extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.setCurrentPlaces = this.setCurrentPlaces.bind(this);\n    this.onClickPlace = this.onClickPlace.bind(this);\n    this.state = {\n      currentPlacesFromCollection: [],\n      pagination: null,\n      detailItem: null\n    };\n  }\n\n  setCurrentPlaces(currentPlacesFromCollection) {\n    this.setState({\n      currentPlacesFromCollection: currentPlacesFromCollection\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.currentPlacesFromCollection !== prevState.currentPlacesFromCollection) {\n      this.setState({\n        currentPlacesFromCollection: this.state.currentPlacesFromCollection\n      });\n    }\n  }\n\n  onClickPlace(item) {\n    this.setState({\n      detailItem: item\n    }); //sends specific item to Map component for pushing detail page\n    // trigger function in child\n  }\n\n  render() {\n    let children = null;\n\n    if (this.props.children) {\n      console.log(\"Container check for props to see children: \", this.props);\n      children = /*#__PURE__*/React.cloneElement(this.props.children, {\n        google: this.props.google,\n        loaded: this.props.loaded,\n        router: this.context.router,\n        onMove: this.onMapMove.bind(this),\n        onPlaceClick: this.onMarkerClick.bind(this),\n        zoom: this.props.zoom\n      });\n    } else {\n      console.log(\"No children in props in my maps container: \", this.props);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Map, {\n      google: this.props.google,\n      visible: false,\n      className: styles.wrapper,\n      style: mapStyles,\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        title: 'Collections List',\n        collections: this.props.collections,\n        className: \"Sidebar\",\n        setCurrentPlaces: this.setCurrentPlaces,\n        onClickPlace: this.onClickPlace,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.content,\n          children: this.props.children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MapComponent, {\n        currentPlacesFromCollection: this.state.currentPlacesFromCollection,\n        detailItem: this.state.detailItem,\n        history: this.props.history,\n        location: this.props.location\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this);\n  }\n\n}\nconst GAPI_KEY = process.env.REACT_APP_GAPI_KEY;\nexport default GoogleApiWrapper({\n  apiKey: GAPI_KEY\n})(MapsViewContainer);","map":{"version":3,"sources":["/Users/bgee/Desktop/Web App Projects/yelp-collections-clone-project/src/views/maps-view-container.js"],"names":["React","Map","GoogleApiWrapper","MapComponent","Sidebar","styles","Detail","Route","mapStyles","width","height","MapsViewContainer","Component","constructor","props","context","setCurrentPlaces","bind","onClickPlace","state","currentPlacesFromCollection","pagination","detailItem","setState","componentDidUpdate","prevProps","prevState","item","render","children","console","log","cloneElement","google","loaded","router","onMove","onMapMove","onPlaceClick","onMarkerClick","zoom","wrapper","collections","content","history","location","GAPI_KEY","process","env","REACT_APP_GAPI_KEY","apiKey"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,IAAaC,gBAAb,QAAoC,mBAApC;AACA,OAAOC,YAAP,MAAyB,WAAzB;AAEA,OAAOC,OAAP,MAAoB,+BAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAAQC,KAAR,QAAoB,kBAApB;AAKA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAE,MADS;AAEhBC,EAAAA,MAAM,EAAE;AAFQ,CAAlB;AAMA,OAAO,MAAMC,iBAAN,SAAgCX,KAAK,CAACY,SAAtC,CAAgD;AACrDC,EAAAA,WAAW,CAACC,KAAD,EAAQC,OAAR,EAAiB;AAC1B,UAAMD,KAAN,EAAaC,OAAb;AAEA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AAEA,SAAKE,KAAL,GAAa;AACXC,MAAAA,2BAA2B,EAAE,EADlB;AAEXC,MAAAA,UAAU,EAAE,IAFD;AAGXC,MAAAA,UAAU,EAAE;AAHD,KAAb;AAKD;;AAEDN,EAAAA,gBAAgB,CAAEI,2BAAF,EAA+B;AAC7C,SAAKG,QAAL,CAAc;AACZH,MAAAA,2BAA2B,EAAEA;AADjB,KAAd;AAGD;;AAEDI,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACvC,QAAI,KAAKP,KAAL,CAAWC,2BAAX,KAA2CM,SAAS,CAACN,2BAAzD,EAAuF;AACrF,WAAKG,QAAL,CAAe;AAAEH,QAAAA,2BAA2B,EAAG,KAAKD,KAAL,CAAWC;AAA3C,OAAf;AACD;AACF;;AAEDF,EAAAA,YAAY,CAACS,IAAD,EAAO;AACjB,SAAKJ,QAAL,CAAc;AAAED,MAAAA,UAAU,EAAEK;AAAd,KAAd,EADiB,CACmB;AACpC;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,QAAIC,QAAQ,GAAG,IAAf;;AACA,QAAI,KAAKf,KAAL,CAAWe,QAAf,EAAyB;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAY,6CAAZ,EAA2D,KAAKjB,KAAhE;AACAe,MAAAA,QAAQ,gBAAG7B,KAAK,CAACgC,YAAN,CAAmB,KAAKlB,KAAL,CAAWe,QAA9B,EAAwC;AACjDI,QAAAA,MAAM,EAAE,KAAKnB,KAAL,CAAWmB,MAD8B;AAEjDC,QAAAA,MAAM,EAAE,KAAKpB,KAAL,CAAWoB,MAF8B;AAGjDC,QAAAA,MAAM,EAAE,KAAKpB,OAAL,CAAaoB,MAH4B;AAIjDC,QAAAA,MAAM,EAAE,KAAKC,SAAL,CAAepB,IAAf,CAAoB,IAApB,CAJyC;AAKjDqB,QAAAA,YAAY,EAAE,KAAKC,aAAL,CAAmBtB,IAAnB,CAAwB,IAAxB,CALmC;AAMjDuB,QAAAA,IAAI,EAAE,KAAK1B,KAAL,CAAW0B;AANgC,OAAxC,CAAX;AAQD,KAVD,MAUO;AACHV,MAAAA,OAAO,CAACC,GAAR,CAAY,6CAAZ,EAA2D,KAAKjB,KAAhE;AACD;;AAGH,wBACI,QAAC,GAAD;AACE,MAAA,MAAM,EAAE,KAAKA,KAAL,CAAWmB,MADrB;AAEE,MAAA,OAAO,EAAE,KAFX;AAGE,MAAA,SAAS,EAAE5B,MAAM,CAACoC,OAHpB;AAIE,MAAA,KAAK,EAAEjC,SAJT;AAAA,8BAME,QAAC,OAAD;AACE,QAAA,KAAK,EAAE,kBADT;AAEE,QAAA,WAAW,EAAE,KAAKM,KAAL,CAAW4B,WAF1B;AAGE,QAAA,SAAS,EAAC,SAHZ;AAIE,QAAA,gBAAgB,EAAE,KAAK1B,gBAJzB;AAKE,QAAA,YAAY,EAAE,KAAKE,YALrB;AAAA,+BAOE;AAAK,UAAA,SAAS,EAAEb,MAAM,CAACsC,OAAvB;AAAA,oBACG,KAAK7B,KAAL,CAAWe;AADd;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,cANF,eAiBE,QAAC,YAAD;AACE,QAAA,2BAA2B,EAAE,KAAKV,KAAL,CAAWC,2BAD1C;AAEE,QAAA,UAAU,EAAE,KAAKD,KAAL,CAAWG,UAFzB;AAGE,QAAA,OAAO,EAAE,KAAKR,KAAL,CAAW8B,OAHtB;AAIE,QAAA,QAAQ,EAAE,KAAK9B,KAAL,CAAW+B;AAJvB;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA2BD;;AA3EoD;AA+EvD,MAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAR,CAAYC,kBAA7B;AACA,eAAe/C,gBAAgB,CAAC;AAC9BgD,EAAAA,MAAM,EAAEJ;AADsB,CAAD,CAAhB,CAEZnC,iBAFY,CAAf","sourcesContent":["import React from 'react'\nimport Map, {GoogleApiWrapper} from 'google-maps-react'\nimport MapComponent from './Map/Map';\n\nimport Sidebar from '../components/Sidebar/Sidebar'\nimport styles from './styles.module.css'\nimport Detail from '../views/Detail/Detail';\nimport {Route} from 'react-router-dom';\n\n\n\n\nconst mapStyles = {\n  width: '100%',\n  height: '100%'\n};\n\n\nexport class MapsViewContainer extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.setCurrentPlaces = this.setCurrentPlaces.bind(this);\n    this.onClickPlace = this.onClickPlace.bind(this);\n\n    this.state = {\n      currentPlacesFromCollection: [],\n      pagination: null,\n      detailItem: null \n    }\n  }\n\n  setCurrentPlaces (currentPlacesFromCollection) {\n    this.setState({\n      currentPlacesFromCollection: currentPlacesFromCollection\n    })\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.currentPlacesFromCollection !== prevState.currentPlacesFromCollection ) {\n      this.setState( { currentPlacesFromCollection:  this.state.currentPlacesFromCollection} )\n    }\n  }\n\n  onClickPlace(item) { \n    this.setState({ detailItem: item }) //sends specific item to Map component for pushing detail page\n    // trigger function in child\n  }\n\n  render() {\n    let children = null;\n    if (this.props.children) {\n      console.log(\"Container check for props to see children: \", this.props)\n      children = React.cloneElement(this.props.children, {\n        google: this.props.google,\n        loaded: this.props.loaded,\n        router: this.context.router,\n        onMove: this.onMapMove.bind(this),\n        onPlaceClick: this.onMarkerClick.bind(this),\n        zoom: this.props.zoom\n      })\n    } else {\n        console.log(\"No children in props in my maps container: \", this.props)\n      }\n\n\n    return (\n        <Map\n          google={this.props.google}\n          visible={false}\n          className={styles.wrapper}\n          style={mapStyles}\n          >\n          <Sidebar\n            title={'Collections List'}\n            collections={this.props.collections}\n            className=\"Sidebar\"\n            setCurrentPlaces={this.setCurrentPlaces}\n            onClickPlace={this.onClickPlace}\n          >      \n            <div className={styles.content}>\n              {this.props.children}\n            </div>    \n          </Sidebar>\n          <MapComponent \n            currentPlacesFromCollection={this.state.currentPlacesFromCollection}\n            detailItem={this.state.detailItem}\n            history={this.props.history}\n            location={this.props.location}>\n\n            </MapComponent>\n        </Map>\n    )\n  }\n}\n\n\nconst GAPI_KEY = process.env.REACT_APP_GAPI_KEY;\nexport default GoogleApiWrapper({\n  apiKey: GAPI_KEY\n})(MapsViewContainer)"]},"metadata":{},"sourceType":"module"}