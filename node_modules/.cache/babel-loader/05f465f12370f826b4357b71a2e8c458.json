{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/bgee/Desktop/Web App Projects/yelp-collections-clone-project/src/views/Map/Map.js\";\nimport React from 'react';\nimport Map, { GoogleApiWrapper } from 'google-maps-react';\nimport styles from './styles.module.css';\nimport './styles.module.css';\nimport { geoLocateUser, initAutocomplete, createMarkers } from '../../utils/googleApiHelpers';\nimport Detail from '../Detail/Detail';\nimport { BrowserRouter as Router, Route, matchPath } from 'react-router-dom';\n\nconst getParams = pathname => {\n  const matchPlace = matchPath(pathname, {\n    path: `/detail/:placeId`\n  });\n  return matchPlace && matchPlace.params || {};\n};\n\nexport class MapComponent extends React.Component {\n  constructor(props) {\n    super(props);\n  } // fill this in based on examples - so we get detail params in here....\n\n\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      pathname\n    } = this.props.location;\n    const {\n      pathname: prevPathname\n    } = prevProps.location;\n    const currentParams = getParams(pathname);\n    const prevParams = getParams(prevPathname);\n\n    if (this.props.detailItem !== prevProps.detailItem) {\n      const place = this.props.detailItem; // fix syntax\n\n      if (!place || !place.place_id) {\n        return;\n      }\n\n      this.props.history.push(`/detail/${place.place_id}`);\n    }\n  }\n\n  onReady(mapProps, map) {\n    initAutocomplete(this.props.google, map);\n    geoLocateUser(this.props.google, map);\n    createMarkers(this.props.google, map, this.props.currentPlacesFromCollection);\n  }\n\n  _renderChildren() {\n    const {\n      children\n    } = this.props;\n\n    if (React.Children.count(children) > 0) {\n      return React.Children.map(children, c => {\n        return /*#__PURE__*/React.cloneElement(c, this.props, {\n          map: this.props.map,\n          google: this.props.google\n        });\n      });\n    }\n    /*else {\n    return this._renderMarkers();\n    } */\n\n  }\n\n  render() {\n    const {\n      children\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Map, {\n      onReady: this.onReady.bind(this),\n      google: this.props.google,\n      className: styles.map,\n      zoomControl: true,\n      zoomControlOptions: {\n        position: this.props.google.maps.ControlPosition.LEFT_CENTER\n      },\n      onRecenter: this.props.onMove,\n      onDragend: this.props.onMove,\n      onClick: this.props.onClick,\n      visible: !children || React.Children.count(children) === 0,\n      initialCenter: {\n        lat: 40.7812,\n        lng: -73.9665\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"pac-input\",\n        className: \"controls\",\n        type: \"text\",\n        placeholder: \"Search Box\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/detail/:placeId\",\n          component: Detail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), this._renderChildren]\n    }, new Date().getTime(), true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  }\n\n} // <Route path={`/detail/${this.props.detailItem.place_id}`} component={Detail} />\n\nconst GAPI_KEY = process.env.REACT_APP_GAPI_KEY;\nexport default GoogleApiWrapper({\n  apiKey: GAPI_KEY\n})(MapComponent);","map":{"version":3,"sources":["/Users/bgee/Desktop/Web App Projects/yelp-collections-clone-project/src/views/Map/Map.js"],"names":["React","Map","GoogleApiWrapper","styles","geoLocateUser","initAutocomplete","createMarkers","Detail","BrowserRouter","Router","Route","matchPath","getParams","pathname","matchPlace","path","params","MapComponent","Component","constructor","props","componentDidUpdate","prevProps","prevState","location","prevPathname","currentParams","prevParams","detailItem","place","place_id","history","push","onReady","mapProps","map","google","currentPlacesFromCollection","_renderChildren","children","Children","count","c","cloneElement","render","bind","position","maps","ControlPosition","LEFT_CENTER","onMove","onClick","lat","lng","Date","getTime","GAPI_KEY","process","env","REACT_APP_GAPI_KEY","apiKey"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Map, {GoogleApiWrapper} from 'google-maps-react';\nimport styles from './styles.module.css';\nimport './styles.module.css';\nimport {geoLocateUser, initAutocomplete, createMarkers} from '../../utils/googleApiHelpers';\nimport Detail from '../Detail/Detail';\nimport { BrowserRouter as Router, Route, matchPath} from 'react-router-dom';\n\n\nconst getParams = pathname => {\n  const matchPlace = matchPath(pathname, {\n    path: `/detail/:placeId`,\n  });\n  return (matchPlace && matchPlace.params) || {};\n};\n\n\nexport class MapComponent extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  // fill this in based on examples - so we get detail params in here....\n\n\n  componentDidUpdate(prevProps, prevState) {\n    const { pathname } = this.props.location;\n    const { pathname: prevPathname } = prevProps.location;\n\n    const currentParams = getParams(pathname);\n    const prevParams = getParams(prevPathname);\n\n\n    if (this.props.detailItem !== prevProps.detailItem ) {\n      const place = this.props.detailItem // fix syntax\n    if (!place || !place.place_id) { return }\n    this.props.history.push(`/detail/${place.place_id}`)\n    }\n  }\n\n  onReady(mapProps, map) {\n    initAutocomplete(this.props.google, map);\n    geoLocateUser(this.props.google, map);\n    createMarkers(this.props.google, map, this.props.currentPlacesFromCollection)\n  }\n\n\n  _renderChildren() {\n    const {children} = this.props;\n\n    if (React.Children.count(children) > 0) {\n      return React.Children.map(children, c => {\n        return React.cloneElement(c, this.props, {\n          map: this.props.map,\n          google: this.props.google\n        })\n      })\n    } /*else {\n      return this._renderMarkers();\n    } */\n  }\n\n  render() {\n    const {children} = this.props;\n\n    return (\n      <Map \n        onReady={this.onReady.bind(this)}\n        google={this.props.google}\n        className={styles.map}\n        zoomControl={true}\n        zoomControlOptions={{position: this.props.google.maps.ControlPosition.LEFT_CENTER}}\n        onRecenter={this.props.onMove}\n        onDragend={this.props.onMove}\n        onClick={this.props.onClick}\n        visible={!children || React.Children.count(children) === 0}\n        initialCenter = {{ lat: 40.7812, lng: -73.9665 }}\n        key={new Date().getTime()}\n        >\n          <input\n            id=\"pac-input\"\n            className=\"controls\"\n            type=\"text\"\n            placeholder=\"Search Box\"\n          />\n          <Router>\n            <Route path=\"/detail/:placeId\" component={Detail} />\n          </Router>\n          \n        {this._renderChildren}\n      </Map>\n    )\n  }\n}\n// <Route path={`/detail/${this.props.detailItem.place_id}`} component={Detail} />\n\n\n\n\nconst GAPI_KEY = process.env.REACT_APP_GAPI_KEY;\nexport default GoogleApiWrapper({\n  apiKey: GAPI_KEY\n})(MapComponent)\n\n\n"]},"metadata":{},"sourceType":"module"}