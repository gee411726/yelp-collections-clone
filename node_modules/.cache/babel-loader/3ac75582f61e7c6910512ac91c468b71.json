{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/bgee/Desktop/Web App Projects/yelp-collections-clone-project/src/components/Listing/Listing.js\";\nimport React, { Component } from 'react';\nimport classnames from 'classnames';\nimport styles from './styles.module.css';\nimport Collection from './Collection';\nexport class Listing extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.collectionsList = this.collectionsList.bind(this);\n  }\n\n  collectionsList() {\n    String.prototype.toProperCase = function () {\n      return this.replace(/\\w\\S*/g, function (txt) {\n        return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n      });\n    };\n\n    return this.props.collections.filter(el => el.collectionName !== 'Users').map(collection => {\n      return /*#__PURE__*/_jsxDEV(Collection, {\n        collectionName: collection.name.toProperCase(),\n        placeName: \"\" // pass place name from DB as a prop\n        ,\n        comments: \"\" // pass comment for place from DB as a prop\n        ,\n        onClickPlace: this.props.onClickPlace,\n        removeDetailItem: this.props.removeDetailItem,\n        setCurrentPlaces: this.props.setCurrentPlaces,\n        sendCurrentCollectionToMapView: this.props.sendCurrentCollectionToMapView,\n        setDBPlace: this.props.setDBPlace\n      }, collection.collectionName, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classnames(styles.container),\n      children: this.collectionsList()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default Listing;","map":{"version":3,"sources":["/Users/bgee/Desktop/Web App Projects/yelp-collections-clone-project/src/components/Listing/Listing.js"],"names":["React","Component","classnames","styles","Collection","Listing","constructor","props","context","collectionsList","bind","String","prototype","toProperCase","replace","txt","charAt","toUpperCase","substr","toLowerCase","collections","filter","el","collectionName","map","collection","name","onClickPlace","removeDetailItem","setCurrentPlaces","sendCurrentCollectionToMapView","setDBPlace","render","container"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAGA,OAAO,MAAMC,OAAN,SAAsBJ,SAAtB,CAAgC;AACrCK,EAAAA,WAAW,CAACC,KAAD,EAAQC,OAAR,EAAiB;AAC1B,UAAMD,KAAN,EAAaC,OAAb;AAEA,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAAvB;AACD;;AAGDD,EAAAA,eAAe,GAAG;AAEhBE,IAAAA,MAAM,CAACC,SAAP,CAAiBC,YAAjB,GAAgC,YAAY;AAC1C,aAAO,KAAKC,OAAL,CAAa,QAAb,EAAuB,UAASC,GAAT,EAAa;AAAC,eAAOA,GAAG,CAACC,MAAJ,CAAW,CAAX,EAAcC,WAAd,KAA8BF,GAAG,CAACG,MAAJ,CAAW,CAAX,EAAcC,WAAd,EAArC;AAAkE,OAAvG,CAAP;AACD,KAFD;;AAIA,WAAO,KAAKZ,KAAL,CAAWa,WAAX,CAAuBC,MAAvB,CAA8BC,EAAE,IAAIA,EAAE,CAACC,cAAH,KAAsB,OAA1D,EAAmEC,GAAnE,CAAuEC,UAAU,IAAI;AAC1F,0BACA,QAAC,UAAD;AACE,QAAA,cAAc,EAAEA,UAAU,CAACC,IAAX,CAAgBb,YAAhB,EADlB;AAEE,QAAA,SAAS,EAAE,EAFb,CAEiB;AAFjB;AAGE,QAAA,QAAQ,EAAE,EAHZ,CAGgB;AAHhB;AAKE,QAAA,YAAY,EAAE,KAAKN,KAAL,CAAWoB,YAL3B;AAME,QAAA,gBAAgB,EAAE,KAAKpB,KAAL,CAAWqB,gBAN/B;AAOE,QAAA,gBAAgB,EAAE,KAAKrB,KAAL,CAAWsB,gBAP/B;AAQE,QAAA,8BAA8B,EAAE,KAAKtB,KAAL,CAAWuB,8BAR7C;AASE,QAAA,UAAU,EAAE,KAAKvB,KAAL,CAAWwB;AATzB,SAION,UAAU,CAACF,cAJlB;AAAA;AAAA;AAAA;AAAA,cADA;AAYD,KAbM,CAAP;AAcD;;AAEDS,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAE9B,UAAU,CAACC,MAAM,CAAC8B,SAAR,CAA1B;AAAA,gBACG,KAAKxB,eAAL;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AApCoC;AAuCvC,eAAeJ,OAAf","sourcesContent":["import React, { Component } from 'react'\nimport classnames from 'classnames'\n\nimport styles from './styles.module.css'\nimport Collection from './Collection'\n\n\nexport class Listing extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.collectionsList = this.collectionsList.bind(this);\n  }\n\n  \n  collectionsList() {\n    \n    String.prototype.toProperCase = function () {\n      return this.replace(/\\w\\S*/g, function(txt){return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();});\n    };\n\n    return this.props.collections.filter(el => el.collectionName !== 'Users').map(collection => {\n      return (\n      <Collection \n        collectionName={collection.name.toProperCase()}\n        placeName={\"\"} // pass place name from DB as a prop\n        comments={\"\"} // pass comment for place from DB as a prop\n        key={collection.collectionName}\n        onClickPlace={this.props.onClickPlace}\n        removeDetailItem={this.props.removeDetailItem}\n        setCurrentPlaces={this.props.setCurrentPlaces}\n        sendCurrentCollectionToMapView={this.props.sendCurrentCollectionToMapView}\n        setDBPlace={this.props.setDBPlace}/>\n      )\n    })\n  }\n\n  render() {\n    return (\n      <div className={classnames(styles.container)}>\n        {this.collectionsList()}\n      </div>\n    )\n  }\n}\n\nexport default Listing"]},"metadata":{},"sourceType":"module"}