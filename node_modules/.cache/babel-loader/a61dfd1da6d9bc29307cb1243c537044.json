{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/bgee/Desktop/Web App Projects/mern-exercise-tracker/src/components/Listing/Listing.js\";\nimport React from 'react';\nimport { PropTypes as T } from 'prop-types';\nimport classnames from 'classnames';\nimport Item from './Item';\nimport styles from './styles.module.css';\nimport Collection from './Collection';\nexport class Listing extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n  }\n\n  collectionsList() {\n    return this.props.collections.map(collection => {\n      return /*#__PURE__*/_jsxDEV(Collection, {\n        collectionName: collection.name,\n        placeName: \"\",\n        address: \"\",\n        type: \"\",\n        comments: \"\"\n      }, collection.collectionName, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 14\n      }, this);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classnames.styles.container,\n      children: collectionsList()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n    /*\n    <div className={classnames(styles.container)}>\n    {this.props.places.map(place => {\n      return (\n        <Item place={place}\n              onClick={this.props.onClick}\n              onHighlight={this.props.onHighlight}\n              offHighlight={this.props.offHighlight}\n              key={place.id} />\n      )\n    })}\n    </div>\n    */\n    ;\n  }\n\n}\nListing.propTypes = {\n  places: T.array.isRequired,\n  onHighlight: T.func,\n  offHighlight: T.func,\n  onClick: T.func\n};\nListing.defaultProps = {\n  onHighlight: () => {},\n  offHighlight: () => {},\n  onClick: () => {}\n};\nexport default Listing;","map":{"version":3,"sources":["/Users/bgee/Desktop/Web App Projects/mern-exercise-tracker/src/components/Listing/Listing.js"],"names":["React","PropTypes","T","classnames","Item","styles","Collection","Listing","Component","constructor","props","context","collectionsList","collections","map","collection","name","collectionName","render","container","propTypes","places","array","isRequired","onHighlight","func","offHighlight","onClick","defaultProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAS,IAAIC,CAAtB,QAA+B,YAA/B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAGA,OAAO,MAAMC,OAAN,SAAsBP,KAAK,CAACQ,SAA5B,CAAsC;AAC3CC,EAAAA,WAAW,CAACC,KAAD,EAAQC,OAAR,EAAiB;AAC1B,UAAMD,KAAN,EAAaC,OAAb;AAED;;AAEDC,EAAAA,eAAe,GAAG;AAChB,WAAO,KAAKF,KAAL,CAAWG,WAAX,CAAuBC,GAAvB,CAA2BC,UAAU,IAAI;AAC9C,0BAAO,QAAC,UAAD;AACL,QAAA,cAAc,EAAEA,UAAU,CAACC,IADtB;AAEL,QAAA,SAAS,EAAE,EAFN;AAGL,QAAA,OAAO,EAAE,EAHJ;AAIL,QAAA,IAAI,EAAE,EAJD;AAKL,QAAA,QAAQ,EAAE;AALL,SAMAD,UAAU,CAACE,cANX;AAAA;AAAA;AAAA;AAAA,cAAP;AAOD,KARM,CAAP;AASD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAEf,UAAU,CAACE,MAAX,CAAkBc,SAAlC;AAAA,gBACGP,eAAe;AADlB;AAAA;AAAA;AAAA;AAAA;AAGA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBI;AAkBD;;AArC0C;AAwC7CL,OAAO,CAACa,SAAR,GAAoB;AAClBC,EAAAA,MAAM,EAAEnB,CAAC,CAACoB,KAAF,CAAQC,UADE;AAElBC,EAAAA,WAAW,EAAEtB,CAAC,CAACuB,IAFG;AAGlBC,EAAAA,YAAY,EAAExB,CAAC,CAACuB,IAHE;AAIlBE,EAAAA,OAAO,EAAEzB,CAAC,CAACuB;AAJO,CAApB;AAOAlB,OAAO,CAACqB,YAAR,GAAuB;AACrBJ,EAAAA,WAAW,EAAE,MAAM,CAAE,CADA;AAErBE,EAAAA,YAAY,EAAE,MAAM,CAAE,CAFD;AAGrBC,EAAAA,OAAO,EAAE,MAAM,CAAE;AAHI,CAAvB;AAMA,eAAepB,OAAf","sourcesContent":["import React from 'react'\nimport { PropTypes as T } from 'prop-types'\nimport classnames from 'classnames'\n\nimport Item from './Item';\nimport styles from './styles.module.css'\nimport Collection from './Collection'\n\n\nexport class Listing extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n  }\n\n  collectionsList() {\n    return this.props.collections.map(collection => {\n      return <Collection \n        collectionName={collection.name}\n        placeName={\"\"}\n        address={\"\"}\n        type={\"\"}\n        comments={\"\"}\n        key={collection.collectionName}/>;\n    })\n  }\n\n  render() {\n    return (\n      <div className={classnames.styles.container}>\n        {collectionsList()}\n      </div>\n      /*\n      <div className={classnames(styles.container)}>\n      {this.props.places.map(place => {\n        return (\n          <Item place={place}\n                onClick={this.props.onClick}\n                onHighlight={this.props.onHighlight}\n                offHighlight={this.props.offHighlight}\n                key={place.id} />\n        )\n      })}\n      </div>\n      */\n    )\n  }\n}\n\nListing.propTypes = {\n  places: T.array.isRequired,\n  onHighlight: T.func,\n  offHighlight: T.func,\n  onClick: T.func\n}\n\nListing.defaultProps = {\n  onHighlight: () => {},\n  offHighlight: () => {},\n  onClick: () => {},\n}\n\nexport default Listing"]},"metadata":{},"sourceType":"module"}