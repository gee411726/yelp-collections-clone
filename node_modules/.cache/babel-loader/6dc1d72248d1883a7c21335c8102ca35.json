{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/bgee/Desktop/Web App Projects/mern-exercise-tracker/src/views/Map/Map.js\";\nimport React from 'react';\nimport Map, { GoogleApiWrapper } from 'google-maps-react';\nimport styles from './styles.module.css';\nimport './styles.module.css';\nimport { searchNearby, searchQuery, geoLocateUser, initAutocomplete, createMarker } from '../../utils/googleApiHelpers';\nexport class MapComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.createMarkers = this.createMarkers.bind(this);\n  }\n\n  onReady(mapProps, map) {\n    initAutocomplete(this.props.google, map);\n    geoLocateUser(this.props.google, map);\n  }\n\n  createMarkers(google, map, places) {\n    var infoWindow = new google.maps.InfoWindow();\n    const updatePlacesButton = document.createElement(\"button\");\n    updatePlacesButton.textContent = \"Press to Update Places based on State\";\n    updatePlacesButton.classList.add(\"custom-map-control-button\");\n    map.controls[google.maps.ControlPosition.BOTTOM_RIGHT].push(updatePlacesButton);\n    updatePlacesButton.addEventListener(\"click\", places => {\n      console.log(places);\n    });\n\n    if (!places) {\n      return;\n    } else {\n      for (var i = 0; i < places.length; i++) {\n        createMarker(google, map, places[i]);\n      }\n    }\n  }\n\n  render() {\n    const {\n      children\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Map, {\n      onReady: this.onReady.bind(this),\n      google: this.props.google,\n      className: styles.map,\n      zoomControl: true,\n      zoomControlOptions: {\n        position: this.props.google.maps.ControlPosition.LEFT_CENTER\n      },\n      onRecenter: this.props.onMove,\n      onDragend: this.props.onMove,\n      onClick: this.props.onClick,\n      visible: !children || React.Children.count(children) === 0,\n      initialCenter: {\n        lat: 40.7812,\n        lng: -73.9665\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"pac-input\",\n        className: \"controls\",\n        type: \"text\",\n        placeholder: \"Search Box\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), this.createMarkers(this.props.google, map, this.props.currentPlacesFromCollection)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nconst GAPI_KEY = process.env.REACT_APP_GAPI_KEY;\nexport default GoogleApiWrapper({\n  apiKey: GAPI_KEY\n})(MapComponent);","map":{"version":3,"sources":["/Users/bgee/Desktop/Web App Projects/mern-exercise-tracker/src/views/Map/Map.js"],"names":["React","Map","GoogleApiWrapper","styles","searchNearby","searchQuery","geoLocateUser","initAutocomplete","createMarker","MapComponent","Component","constructor","props","createMarkers","bind","onReady","mapProps","map","google","places","infoWindow","maps","InfoWindow","updatePlacesButton","document","createElement","textContent","classList","add","controls","ControlPosition","BOTTOM_RIGHT","push","addEventListener","console","log","i","length","render","children","position","LEFT_CENTER","onMove","onClick","Children","count","lat","lng","currentPlacesFromCollection","GAPI_KEY","process","env","REACT_APP_GAPI_KEY","apiKey"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Map, {GoogleApiWrapper} from 'google-maps-react';\nimport styles from './styles.module.css';\nimport './styles.module.css';\nimport {searchNearby, searchQuery, geoLocateUser, initAutocomplete, createMarker} from '../../utils/googleApiHelpers';\n\n\nexport class MapComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n\n    this.createMarkers = this.createMarkers.bind(this);\n  }\n\n  onReady(mapProps, map) {\n    initAutocomplete(this.props.google, map);\n    geoLocateUser(this.props.google, map);\n  }\n\n  createMarkers(google, map, places) {\n    var infoWindow = new google.maps.InfoWindow();\n  \n    const updatePlacesButton = document.createElement(\"button\");\n    updatePlacesButton.textContent = \"Press to Update Places based on State\"; \n    updatePlacesButton.classList.add(\"custom-map-control-button\");\n    map.controls[google.maps.ControlPosition.BOTTOM_RIGHT].push(updatePlacesButton);\n  \n    updatePlacesButton.addEventListener(\"click\", (places) => {\n      console.log(places)\n    });\n  \n    if (!places) {\n      return\n    } else {\n      for (var i = 0; i < places.length; i++) {\n        createMarker(google, map, places[i])\n      }\n    }\n  }\n\n\n  \n\n  render() {\n    const {children} = this.props;\n\n    return (\n      <Map \n        onReady={this.onReady.bind(this)}\n        google={this.props.google}\n        className={styles.map}\n        zoomControl={true}\n        zoomControlOptions={{position: this.props.google.maps.ControlPosition.LEFT_CENTER}}\n        onRecenter={this.props.onMove}\n        onDragend={this.props.onMove}\n        onClick={this.props.onClick}\n        visible={!children || React.Children.count(children) === 0}\n        initialCenter = {{ lat: 40.7812, lng: -73.9665 }}\n        >\n          <input\n            id=\"pac-input\"\n            className=\"controls\"\n            type=\"text\"\n            placeholder=\"Search Box\"\n          />\n          {this.createMarkers(this.props.google, map, this.props.currentPlacesFromCollection)}\n      </Map>\n    )\n  }\n}\n\nconst GAPI_KEY = process.env.REACT_APP_GAPI_KEY;\nexport default GoogleApiWrapper({\n  apiKey: GAPI_KEY\n})(MapComponent)"]},"metadata":{},"sourceType":"module"}