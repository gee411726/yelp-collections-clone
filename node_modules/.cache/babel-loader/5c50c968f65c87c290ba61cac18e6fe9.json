{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/bgee/Desktop/Web App Projects/yelp-collections-clone-project/src/views/Map/Map.js\";\nimport React from 'react';\nimport Map, { GoogleApiWrapper } from 'google-maps-react';\nimport styles from './styles.module.css';\nimport './styles.module.css';\nimport { geoLocateUser, initAutocomplete, createMarkers } from '../../utils/googleApiHelpers';\nimport Detail from '../Detail/Detail';\nexport class MapComponent extends React.Component {\n  onReady(mapProps, map) {\n    initAutocomplete(this.props.google, map);\n    geoLocateUser(this.props.google, map);\n    createMarkers(this.props.google, map, this.props.currentPlacesFromCollection, this.props.collections);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Map, {\n        onReady: this.onReady.bind(this),\n        google: this.props.google,\n        className: styles.map,\n        zoomControl: true,\n        zoomControlOptions: {\n          position: this.props.google.maps.ControlPosition.LEFT_CENTER\n        },\n        onRecenter: this.props.onMove,\n        onDragend: this.props.onMove,\n        onClick: this.props.onClick,\n        initialCenter: {\n          lat: 40.7812,\n          lng: -73.9665\n        },\n        mapTypeControlOptions: {\n          mapTypeIds: []\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"pac-input\",\n          className: \"controls\",\n          type: \"text\",\n          placeholder: \"Search Box\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Detail, {\n          placeId: this.props.detailItem.place_id,\n          currentCollectionName: this.props.currentCollectionName,\n          placeDB: this.props.placeDB\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, new Date().getTime(), true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nconst GAPI_KEY = process.env.REACT_APP_GAPI_KEY;\nexport default GoogleApiWrapper({\n  apiKey: GAPI_KEY\n})(MapComponent);","map":{"version":3,"sources":["/Users/bgee/Desktop/Web App Projects/yelp-collections-clone-project/src/views/Map/Map.js"],"names":["React","Map","GoogleApiWrapper","styles","geoLocateUser","initAutocomplete","createMarkers","Detail","MapComponent","Component","onReady","mapProps","map","props","google","currentPlacesFromCollection","collections","render","bind","position","maps","ControlPosition","LEFT_CENTER","onMove","onClick","lat","lng","mapTypeIds","detailItem","place_id","currentCollectionName","placeDB","Date","getTime","GAPI_KEY","process","env","REACT_APP_GAPI_KEY","apiKey"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,IAAaC,gBAAb,QAAoC,mBAApC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAO,qBAAP;AACA,SAAQC,aAAR,EAAuBC,gBAAvB,EAAyCC,aAAzC,QAA6D,8BAA7D;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AAIA,OAAO,MAAMC,YAAN,SAA2BR,KAAK,CAACS,SAAjC,CAA2C;AAEhDC,EAAAA,OAAO,CAACC,QAAD,EAAWC,GAAX,EAAgB;AACrBP,IAAAA,gBAAgB,CAAC,KAAKQ,KAAL,CAAWC,MAAZ,EAAoBF,GAApB,CAAhB;AACAR,IAAAA,aAAa,CAAC,KAAKS,KAAL,CAAWC,MAAZ,EAAoBF,GAApB,CAAb;AACAN,IAAAA,aAAa,CAAC,KAAKO,KAAL,CAAWC,MAAZ,EAAoBF,GAApB,EAAyB,KAAKC,KAAL,CAAWE,2BAApC,EAAiE,KAAKF,KAAL,CAAWG,WAA5E,CAAb;AACD;;AAEDC,EAAAA,MAAM,GAAG;AAEP,wBACE;AAAA,6BACE,QAAC,GAAD;AACE,QAAA,OAAO,EAAE,KAAKP,OAAL,CAAaQ,IAAb,CAAkB,IAAlB,CADX;AAEE,QAAA,MAAM,EAAE,KAAKL,KAAL,CAAWC,MAFrB;AAGE,QAAA,SAAS,EAAEX,MAAM,CAACS,GAHpB;AAIE,QAAA,WAAW,EAAE,IAJf;AAKE,QAAA,kBAAkB,EAAE;AAACO,UAAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWC,MAAX,CAAkBM,IAAlB,CAAuBC,eAAvB,CAAuCC;AAAlD,SALtB;AAME,QAAA,UAAU,EAAE,KAAKT,KAAL,CAAWU,MANzB;AAOE,QAAA,SAAS,EAAE,KAAKV,KAAL,CAAWU,MAPxB;AAQE,QAAA,OAAO,EAAE,KAAKV,KAAL,CAAWW,OARtB;AASE,QAAA,aAAa,EAAI;AAAEC,UAAAA,GAAG,EAAE,OAAP;AAAgBC,UAAAA,GAAG,EAAE,CAAC;AAAtB,SATnB;AAWE,QAAA,qBAAqB,EAAG;AAAEC,UAAAA,UAAU,EAAE;AAAd,SAX1B;AAAA,gCAaE;AACE,UAAA,EAAE,EAAC,WADL;AAEE,UAAA,SAAS,EAAC,UAFZ;AAGE,UAAA,IAAI,EAAC,MAHP;AAIE,UAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,gBAbF,eAmBE,QAAC,MAAD;AACA,UAAA,OAAO,EAAE,KAAKd,KAAL,CAAWe,UAAX,CAAsBC,QAD/B;AAEA,UAAA,qBAAqB,EAAE,KAAKhB,KAAL,CAAWiB,qBAFlC;AAGA,UAAA,OAAO,EAAE,KAAKjB,KAAL,CAAWkB;AAHpB;AAAA;AAAA;AAAA;AAAA,gBAnBF;AAAA,SAUO,IAAIC,IAAJ,GAAWC,OAAX,EAVP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AA6BD;;AAvC+C;AA0ClD,MAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAR,CAAYC,kBAA7B;AACA,eAAenC,gBAAgB,CAAC;AAC9BoC,EAAAA,MAAM,EAAEJ;AADsB,CAAD,CAAhB,CAEZ1B,YAFY,CAAf","sourcesContent":["import React from 'react';\nimport Map, {GoogleApiWrapper} from 'google-maps-react';\nimport styles from './styles.module.css';\nimport './styles.module.css';\nimport {geoLocateUser, initAutocomplete, createMarkers} from '../../utils/googleApiHelpers';\nimport Detail from '../Detail/Detail';\n\n\n\nexport class MapComponent extends React.Component {\n\n  onReady(mapProps, map) {\n    initAutocomplete(this.props.google, map);\n    geoLocateUser(this.props.google, map);\n    createMarkers(this.props.google, map, this.props.currentPlacesFromCollection, this.props.collections)\n  }\n\n  render() {\n\n    return (\n      <div>\n        <Map \n          onReady={this.onReady.bind(this)}\n          google={this.props.google}\n          className={styles.map}\n          zoomControl={true}\n          zoomControlOptions={{position: this.props.google.maps.ControlPosition.LEFT_CENTER}}\n          onRecenter={this.props.onMove}\n          onDragend={this.props.onMove}\n          onClick={this.props.onClick}\n          initialCenter = {{ lat: 40.7812, lng: -73.9665 }}\n          key={new Date().getTime()}\n          mapTypeControlOptions= {{ mapTypeIds: [] }}\n        >\n          <input\n            id=\"pac-input\"\n            className=\"controls\"\n            type=\"text\"\n            placeholder=\"Search Box\"\n          />\n          <Detail \n          placeId={this.props.detailItem.place_id} \n          currentCollectionName={this.props.currentCollectionName}\n          placeDB={this.props.placeDB}/>      \n        </Map>\n      </div>\n\n    )\n  }\n}\n\nconst GAPI_KEY = process.env.REACT_APP_GAPI_KEY;\nexport default GoogleApiWrapper({\n  apiKey: GAPI_KEY\n})(MapComponent)\n\n\n"]},"metadata":{},"sourceType":"module"}