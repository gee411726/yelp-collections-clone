{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/bgee/Desktop/Web App Projects/yelp-collections-clone-project/src/views/Map/Map.js\";\nimport React from 'react';\nimport Map, { GoogleApiWrapper } from 'google-maps-react';\nimport styles from './styles.module.css';\nimport './styles.module.css';\nimport { searchNearby, searchQuery, geoLocateUser, initAutocomplete, createMarkers } from '../../utils/googleApiHelpers';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Detail from '../Detail/Detail';\nexport class MapComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onClickPlace = this.onClickPlace.bind(this);\n  }\n\n  onReady(mapProps, map) {\n    initAutocomplete(this.props.google, map);\n    geoLocateUser(this.props.google, map);\n    createMarkers(this.props.google, map, this.props.currentPlacesFromCollection);\n  }\n\n  onClickPlace(item) {\n    // what's the trigger though?\n    //this.props.detailItem is our item / place to use for this\n    if (!place || !place.place_id) {\n      return;\n    }\n\n    this.props.history.push(`/detail/${place.place_id}`);\n  }\n\n  _renderChildren() {\n    const {\n      children\n    } = this.props;\n\n    if (React.Children.count(children) > 0) {\n      return React.Children.map(children, c => {\n        return /*#__PURE__*/React.cloneElement(c, this.props, {\n          map: this.props.map,\n          google: this.props.google\n        });\n      });\n    }\n    /*else {\n    return this._renderMarkers();\n    } */\n\n  }\n\n  render() {\n    const {\n      children\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Map, {\n      onReady: this.onReady.bind(this),\n      google: this.props.google,\n      className: styles.map,\n      zoomControl: true,\n      zoomControlOptions: {\n        position: this.props.google.maps.ControlPosition.LEFT_CENTER\n      },\n      onRecenter: this.props.onMove,\n      onDragend: this.props.onMove,\n      onClick: this.props.onClick,\n      visible: !children || React.Children.count(children) === 0,\n      initialCenter: {\n        lat: 40.7812,\n        lng: -73.9665\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"pac-input\",\n        className: \"controls\",\n        type: \"text\",\n        placeholder: \"Search Box\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), this._renderChildren]\n    }, new Date().getTime(), true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n\n} // add the line below after we move onClick to come down after Map\n//<Route path={`/detail/${place.place_id}`} component={Detail} />\n\nconst GAPI_KEY = process.env.REACT_APP_GAPI_KEY;\nexport default GoogleApiWrapper({\n  apiKey: GAPI_KEY\n})(MapComponent);","map":{"version":3,"sources":["/Users/bgee/Desktop/Web App Projects/yelp-collections-clone-project/src/views/Map/Map.js"],"names":["React","Map","GoogleApiWrapper","styles","searchNearby","searchQuery","geoLocateUser","initAutocomplete","createMarkers","BrowserRouter","Router","Route","Detail","MapComponent","Component","constructor","props","onClickPlace","bind","onReady","mapProps","map","google","currentPlacesFromCollection","item","place","place_id","history","push","_renderChildren","children","Children","count","c","cloneElement","render","position","maps","ControlPosition","LEFT_CENTER","onMove","onClick","lat","lng","Date","getTime","GAPI_KEY","process","env","REACT_APP_GAPI_KEY","apiKey"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Map, {GoogleApiWrapper} from 'google-maps-react';\nimport styles from './styles.module.css';\nimport './styles.module.css';\nimport {searchNearby, searchQuery, geoLocateUser, initAutocomplete, createMarkers} from '../../utils/googleApiHelpers';\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\nimport Detail from '../Detail/Detail';\n\n\nexport class MapComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onClickPlace = this.onClickPlace.bind(this);\n\n  }\n\n  onReady(mapProps, map) {\n    initAutocomplete(this.props.google, map);\n    geoLocateUser(this.props.google, map);\n    createMarkers(this.props.google, map, this.props.currentPlacesFromCollection)\n  }\n  \n  onClickPlace(item) { // what's the trigger though?\n  //this.props.detailItem is our item / place to use for this\n    if (!place || !place.place_id) { return }\n    this.props.history.push(`/detail/${place.place_id}`)\n  }\n\n  _renderChildren() {\n    const {children} = this.props;\n\n    if (React.Children.count(children) > 0) {\n      return React.Children.map(children, c => {\n        return React.cloneElement(c, this.props, {\n          map: this.props.map,\n          google: this.props.google\n        })\n      })\n    } /*else {\n      return this._renderMarkers();\n    } */\n  }\n\n  render() {\n    const {children} = this.props;\n\n    return (\n      <Map \n        onReady={this.onReady.bind(this)}\n        google={this.props.google}\n        className={styles.map}\n        zoomControl={true}\n        zoomControlOptions={{position: this.props.google.maps.ControlPosition.LEFT_CENTER}}\n        onRecenter={this.props.onMove}\n        onDragend={this.props.onMove}\n        onClick={this.props.onClick}\n        visible={!children || React.Children.count(children) === 0}\n        initialCenter = {{ lat: 40.7812, lng: -73.9665 }}\n        key={new Date().getTime()}\n        >\n          <input\n            id=\"pac-input\"\n            className=\"controls\"\n            type=\"text\"\n            placeholder=\"Search Box\"\n          />\n        {this._renderChildren}\n\n\n      </Map>\n    )\n  }\n}\n// add the line below after we move onClick to come down after Map\n//<Route path={`/detail/${place.place_id}`} component={Detail} />\n\n\n\nconst GAPI_KEY = process.env.REACT_APP_GAPI_KEY;\nexport default GoogleApiWrapper({\n  apiKey: GAPI_KEY\n})(MapComponent)\n"]},"metadata":{},"sourceType":"module"}